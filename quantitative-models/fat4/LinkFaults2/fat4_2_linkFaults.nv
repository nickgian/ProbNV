(* Bounded link faults *)

include "../fat4_control.nv"

symbolic f0 : tedge
symbolic f1 : tedge

let mergeLinkFaults u (x : [M]attribute) (y : [M]attribute) =
  merge u x y

let linkFailed e =
  (f0 = e) || (f1 = e) ||
    (let (u~v) = e in 
      match toEdge v u with 
      | None -> false 
      | Some erev -> f0 = erev || f1 = erev)


let transLinkFaults d e (x : [M]attribute) =
  if linkFailed e then
    {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  else trans d e x

let initLinkFaults d u = init d u 

solution rib_70_0_6_0_24 = (initLinkFaults (70.0.6.0/24), transLinkFaults (70.0.6.0/24), mergeLinkFaults)

solution rib_70_0_7_0_24 = (initLinkFaults (70.0.7.0/24), transLinkFaults (70.0.7.0/24), mergeLinkFaults)

solution rib_70_0_10_0_24 = (initLinkFaults (70.0.10.0/24), transLinkFaults (70.0.10.0/24), mergeLinkFaults)

solution rib_70_0_11_0_24 = (initLinkFaults (70.0.11.0/24), transLinkFaults (70.0.11.0/24), mergeLinkFaults)

solution rib_70_0_14_0_24 = (initLinkFaults (70.0.14.0/24), transLinkFaults (70.0.14.0/24), mergeLinkFaults)

solution rib_70_0_15_0_24 = (initLinkFaults (70.0.15.0/24), transLinkFaults (70.0.15.0/24), mergeLinkFaults)

solution rib_70_0_18_0_24 = (initLinkFaults (70.0.18.0/24), transLinkFaults (70.0.18.0/24), mergeLinkFaults)

solution rib_70_0_19_0_24 = (initLinkFaults (70.0.19.0/24), transLinkFaults (70.0.19.0/24), mergeLinkFaults)

