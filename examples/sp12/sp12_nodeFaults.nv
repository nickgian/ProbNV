include "sp12_control.nv"

symbolic b0: bool = | true -> 0.05p | false -> 0.95p
symbolic b1: bool = | true -> 0.05p | false -> 0.95p
symbolic b2: bool = | true -> 0.05p | false -> 0.95p
symbolic b3: bool = | true -> 0.05p | false -> 0.95p
symbolic b4: bool = | true -> 0.05p | false -> 0.95p
symbolic b5: bool = | true -> 0.05p | false -> 0.95p
symbolic b6: bool = | true -> 0.05p | false -> 0.95p
symbolic b7: bool = | true -> 0.05p | false -> 0.95p
symbolic b8: bool = | true -> 0.05p | false -> 0.95p
symbolic b9: bool = | true -> 0.05p | false -> 0.95p
symbolic b10: bool = | true -> 0.05p | false -> 0.95p
symbolic b11: bool = | true -> 0.05p | false -> 0.95p
symbolic b12: bool = | true -> 0.05p | false -> 0.95p
symbolic b13: bool = | true -> 0.05p | false -> 0.95p
symbolic b14: bool = | true -> 0.05p | false -> 0.95p
symbolic b15: bool = | true -> 0.05p | false -> 0.95p
symbolic b16: bool = | true -> 0.05p | false -> 0.95p
symbolic b17: bool = | true -> 0.05p | false -> 0.95p
symbolic b18: bool = | true -> 0.05p | false -> 0.95p
symbolic b19: bool = | true -> 0.05p | false -> 0.95p
symbolic b20: bool = | true -> 0.05p | false -> 0.95p
symbolic b21: bool = | true -> 0.05p | false -> 0.95p
symbolic b22: bool = | true -> 0.05p | false -> 0.95p
symbolic b23: bool = | true -> 0.05p | false -> 0.95p
symbolic b24: bool = | true -> 0.05p | false -> 0.95p
symbolic b25: bool = | true -> 0.05p | false -> 0.95p
symbolic b26: bool = | true -> 0.05p | false -> 0.95p
symbolic b27: bool = | true -> 0.05p | false -> 0.95p
symbolic b28: bool = | true -> 0.05p | false -> 0.95p
symbolic b29: bool = | true -> 0.05p | false -> 0.95p
symbolic b30: bool = | true -> 0.05p | false -> 0.95p
symbolic b31: bool = | true -> 0.05p | false -> 0.95p
symbolic b32: bool = | true -> 0.05p | false -> 0.95p
symbolic b33: bool = | true -> 0.05p | false -> 0.95p
symbolic b34: bool = | true -> 0.05p | false -> 0.95p
symbolic b35: bool = | true -> 0.05p | false -> 0.95p
symbolic b36: bool = | true -> 0.05p | false -> 0.95p
symbolic b37: bool = | true -> 0.05p | false -> 0.95p
symbolic b38: bool = | true -> 0.05p | false -> 0.95p
symbolic b39: bool = | true -> 0.05p | false -> 0.95p
symbolic b40: bool = | true -> 0.05p | false -> 0.95p
symbolic b41: bool = | true -> 0.05p | false -> 0.95p
symbolic b42: bool = | true -> 0.05p | false -> 0.95p
symbolic b43: bool = | true -> 0.05p | false -> 0.95p
symbolic b44: bool = | true -> 0.05p | false -> 0.95p
symbolic b45: bool = | true -> 0.05p | false -> 0.95p
symbolic b46: bool = | true -> 0.05p | false -> 0.95p
symbolic b47: bool = | true -> 0.05p | false -> 0.95p
symbolic b48: bool = | true -> 0.05p | false -> 0.95p
symbolic b49: bool = | true -> 0.05p | false -> 0.95p
symbolic b50: bool = | true -> 0.05p | false -> 0.95p
symbolic b51: bool = | true -> 0.05p | false -> 0.95p
symbolic b52: bool = | true -> 0.05p | false -> 0.95p
symbolic b53: bool = | true -> 0.05p | false -> 0.95p
symbolic b54: bool = | true -> 0.05p | false -> 0.95p
symbolic b55: bool = | true -> 0.05p | false -> 0.95p
symbolic b56: bool = | true -> 0.05p | false -> 0.95p
symbolic b57: bool = | true -> 0.05p | false -> 0.95p
symbolic b58: bool = | true -> 0.05p | false -> 0.95p
symbolic b59: bool = | true -> 0.05p | false -> 0.95p
symbolic b60: bool = | true -> 0.05p | false -> 0.95p
symbolic b61: bool = | true -> 0.05p | false -> 0.95p
symbolic b62: bool = | true -> 0.05p | false -> 0.95p
symbolic b63: bool = | true -> 0.05p | false -> 0.95p
symbolic b64: bool = | true -> 0.05p | false -> 0.95p
symbolic b65: bool = | true -> 0.05p | false -> 0.95p
symbolic b66: bool = | true -> 0.05p | false -> 0.95p
symbolic b67: bool = | true -> 0.05p | false -> 0.95p
symbolic b68: bool = | true -> 0.05p | false -> 0.95p
symbolic b69: bool = | true -> 0.05p | false -> 0.95p
symbolic b70: bool = | true -> 0.05p | false -> 0.95p
symbolic b71: bool = | true -> 0.05p | false -> 0.95p
symbolic b72: bool = | true -> 0.05p | false -> 0.95p
symbolic b73: bool = | true -> 0.05p | false -> 0.95p
symbolic b74: bool = | true -> 0.05p | false -> 0.95p
symbolic b75: bool = | true -> 0.05p | false -> 0.95p
symbolic b76: bool = | true -> 0.05p | false -> 0.95p
symbolic b77: bool = | true -> 0.05p | false -> 0.95p
symbolic b78: bool = | true -> 0.05p | false -> 0.95p
symbolic b79: bool = | true -> 0.05p | false -> 0.95p
symbolic b80: bool = | true -> 0.05p | false -> 0.95p
symbolic b81: bool = | true -> 0.05p | false -> 0.95p
symbolic b82: bool = | true -> 0.05p | false -> 0.95p
symbolic b83: bool = | true -> 0.05p | false -> 0.95p
symbolic b84: bool = | true -> 0.05p | false -> 0.95p
symbolic b85: bool = | true -> 0.05p | false -> 0.95p
symbolic b86: bool = | true -> 0.05p | false -> 0.95p
symbolic b87: bool = | true -> 0.05p | false -> 0.95p
symbolic b88: bool = | true -> 0.05p | false -> 0.95p
symbolic b89: bool = | true -> 0.05p | false -> 0.95p
symbolic b90: bool = | true -> 0.05p | false -> 0.95p
symbolic b91: bool = | true -> 0.05p | false -> 0.95p
symbolic b92: bool = | true -> 0.05p | false -> 0.95p
symbolic b93: bool = | true -> 0.05p | false -> 0.95p
symbolic b94: bool = | true -> 0.05p | false -> 0.95p
symbolic b95: bool = | true -> 0.05p | false -> 0.95p
symbolic b96: bool = | true -> 0.05p | false -> 0.95p
symbolic b97: bool = | true -> 0.05p | false -> 0.95p
symbolic b98: bool = | true -> 0.05p | false -> 0.95p
symbolic b99: bool = | true -> 0.05p | false -> 0.95p
symbolic b100: bool = | true -> 0.05p | false -> 0.95p
symbolic b101: bool = | true -> 0.05p | false -> 0.95p
symbolic b102: bool = | true -> 0.05p | false -> 0.95p
symbolic b103: bool = | true -> 0.05p | false -> 0.95p
symbolic b104: bool = | true -> 0.05p | false -> 0.95p
symbolic b105: bool = | true -> 0.05p | false -> 0.95p
symbolic b106: bool = | true -> 0.05p | false -> 0.95p
symbolic b107: bool = | true -> 0.05p | false -> 0.95p
symbolic b108: bool = | true -> 0.05p | false -> 0.95p
symbolic b109: bool = | true -> 0.05p | false -> 0.95p
symbolic b110: bool = | true -> 0.05p | false -> 0.95p
symbolic b111: bool = | true -> 0.05p | false -> 0.95p
symbolic b112: bool = | true -> 0.05p | false -> 0.95p
symbolic b113: bool = | true -> 0.05p | false -> 0.95p
symbolic b114: bool = | true -> 0.05p | false -> 0.95p
symbolic b115: bool = | true -> 0.05p | false -> 0.95p
symbolic b116: bool = | true -> 0.05p | false -> 0.95p
symbolic b117: bool = | true -> 0.05p | false -> 0.95p
symbolic b118: bool = | true -> 0.05p | false -> 0.95p
symbolic b119: bool = | true -> 0.05p | false -> 0.95p
symbolic b120: bool = | true -> 0.05p | false -> 0.95p
symbolic b121: bool = | true -> 0.05p | false -> 0.95p
symbolic b122: bool = | true -> 0.05p | false -> 0.95p
symbolic b123: bool = | true -> 0.05p | false -> 0.95p
symbolic b124: bool = | true -> 0.05p | false -> 0.95p
symbolic b125: bool = | true -> 0.05p | false -> 0.95p
symbolic b126: bool = | true -> 0.05p | false -> 0.95p
symbolic b127: bool = | true -> 0.05p | false -> 0.95p
symbolic b128: bool = | true -> 0.05p | false -> 0.95p
symbolic b129: bool = | true -> 0.05p | false -> 0.95p
symbolic b130: bool = | true -> 0.05p | false -> 0.95p
symbolic b131: bool = | true -> 0.05p | false -> 0.95p
symbolic b132: bool = | true -> 0.05p | false -> 0.95p
symbolic b133: bool = | true -> 0.05p | false -> 0.95p
symbolic b134: bool = | true -> 0.05p | false -> 0.95p
symbolic b135: bool = | true -> 0.05p | false -> 0.95p
symbolic b136: bool = | true -> 0.05p | false -> 0.95p
symbolic b137: bool = | true -> 0.05p | false -> 0.95p
symbolic b138: bool = | true -> 0.05p | false -> 0.95p
symbolic b139: bool = | true -> 0.05p | false -> 0.95p
symbolic b140: bool = | true -> 0.05p | false -> 0.95p
symbolic b141: bool = | true -> 0.05p | false -> 0.95p
symbolic b142: bool = | true -> 0.05p | false -> 0.95p
symbolic b143: bool = | true -> 0.05p | false -> 0.95p
symbolic b144: bool = | true -> 0.05p | false -> 0.95p
symbolic b145: bool = | true -> 0.05p | false -> 0.95p
symbolic b146: bool = | true -> 0.05p | false -> 0.95p
symbolic b147: bool = | true -> 0.05p | false -> 0.95p
symbolic b148: bool = | true -> 0.05p | false -> 0.95p
symbolic b149: bool = | true -> 0.05p | false -> 0.95p
symbolic b150: bool = | true -> 0.05p | false -> 0.95p
symbolic b151: bool = | true -> 0.05p | false -> 0.95p
symbolic b152: bool = | true -> 0.05p | false -> 0.95p
symbolic b153: bool = | true -> 0.05p | false -> 0.95p
symbolic b154: bool = | true -> 0.05p | false -> 0.95p
symbolic b155: bool = | true -> 0.05p | false -> 0.95p
symbolic b156: bool = | true -> 0.05p | false -> 0.95p
symbolic b157: bool = | true -> 0.05p | false -> 0.95p
symbolic b158: bool = | true -> 0.05p | false -> 0.95p
symbolic b159: bool = | true -> 0.05p | false -> 0.95p
symbolic b160: bool = | true -> 0.05p | false -> 0.95p
symbolic b161: bool = | true -> 0.05p | false -> 0.95p
symbolic b162: bool = | true -> 0.05p | false -> 0.95p
symbolic b163: bool = | true -> 0.05p | false -> 0.95p
symbolic b164: bool = | true -> 0.05p | false -> 0.95p
symbolic b165: bool = | true -> 0.05p | false -> 0.95p
symbolic b166: bool = | true -> 0.05p | false -> 0.95p
symbolic b167: bool = | true -> 0.05p | false -> 0.95p
symbolic b168: bool = | true -> 0.05p | false -> 0.95p
symbolic b169: bool = | true -> 0.05p | false -> 0.95p
symbolic b170: bool = | true -> 0.05p | false -> 0.95p
symbolic b171: bool = | true -> 0.05p | false -> 0.95p
symbolic b172: bool = | true -> 0.05p | false -> 0.95p
symbolic b173: bool = | true -> 0.05p | false -> 0.95p
symbolic b174: bool = | true -> 0.05p | false -> 0.95p
symbolic b175: bool = | true -> 0.05p | false -> 0.95p
symbolic b176: bool = | true -> 0.05p | false -> 0.95p
symbolic b177: bool = | true -> 0.05p | false -> 0.95p
symbolic b178: bool = | true -> 0.05p | false -> 0.95p
symbolic b179: bool = | true -> 0.05p | false -> 0.95p

let isFailed u = 
  match u with
  | 0n -> b0
  | 1n -> b1
  | 2n -> b2
  | 3n -> b3
  | 4n -> b4
  | 5n -> b5
  | 6n -> b6
  | 7n -> b7
  | 8n -> b8
  | 9n -> b9
  | 10n -> b10
  | 11n -> b11
  | 12n -> b12
  | 13n -> b13
  | 14n -> b14
  | 15n -> b15
  | 16n -> b16
  | 17n -> b17
  | 18n -> b18
  | 19n -> b19
  | 20n -> b20
  | 21n -> b21
  | 22n -> b22
  | 23n -> b23
  | 24n -> b24
  | 25n -> b25
  | 26n -> b26
  | 27n -> b27
  | 28n -> b28
  | 29n -> b29
  | 30n -> b30
  | 31n -> b31
  | 32n -> b32
  | 33n -> b33
  | 34n -> b34
  | 35n -> b35
  | 36n -> b36
  | 37n -> b37
  | 38n -> b38
  | 39n -> b39
  | 40n -> b40
  | 41n -> b41
  | 42n -> b42
  | 43n -> b43
  | 44n -> b44
  | 45n -> b45
  | 46n -> b46
  | 47n -> b47
  | 48n -> b48
  | 49n -> b49
  | 50n -> b50
  | 51n -> b51
  | 52n -> b52
  | 53n -> b53
  | 54n -> b54
  | 55n -> b55
  | 56n -> b56
  | 57n -> b57
  | 58n -> b58
  | 59n -> b59
  | 60n -> b60
  | 61n -> b61
  | 62n -> b62
  | 63n -> b63
  | 64n -> b64
  | 65n -> b65
  | 66n -> b66
  | 67n -> b67
  | 68n -> b68
  | 69n -> b69
  | 70n -> b70
  | 71n -> b71
  | 72n -> b72
  | 73n -> b73
  | 74n -> b74
  | 75n -> b75
  | 76n -> b76
  | 77n -> b77
  | 78n -> b78
  | 79n -> b79
  | 80n -> b80
  | 81n -> b81
  | 82n -> b82
  | 83n -> b83
  | 84n -> b84
  | 85n -> b85
  | 86n -> b86
  | 87n -> b87
  | 88n -> b88
  | 89n -> b89
  | 90n -> b90
  | 91n -> b91
  | 92n -> b92
  | 93n -> b93
  | 94n -> b94
  | 95n -> b95
  | 96n -> b96
  | 97n -> b97
  | 98n -> b98
  | 99n -> b99
  | 100n -> b100
  | 101n -> b101
  | 102n -> b102
  | 103n -> b103
  | 104n -> b104
  | 105n -> b105
  | 106n -> b106
  | 107n -> b107
  | 108n -> b108
  | 109n -> b109
  | 110n -> b110
  | 111n -> b111
  | 112n -> b112
  | 113n -> b113
  | 114n -> b114
  | 115n -> b115
  | 116n -> b116
  | 117n -> b117
  | 118n -> b118
  | 119n -> b119
  | 120n -> b120
  | 121n -> b121
  | 122n -> b122
  | 123n -> b123
  | 124n -> b124
  | 125n -> b125
  | 126n -> b126
  | 127n -> b127
  | 128n -> b128
  | 129n -> b129
  | 130n -> b130
  | 131n -> b131
  | 132n -> b132
  | 133n -> b133
  | 134n -> b134
  | 135n -> b135
  | 136n -> b136
  | 137n -> b137
  | 138n -> b138
  | 139n -> b139
  | 140n -> b140
  | 141n -> b141
  | 142n -> b142
  | 143n -> b143
  | 144n -> b144
  | 145n -> b145
  | 146n -> b146
  | 147n -> b147
  | 148n -> b148
  | 149n -> b149
  | 150n -> b150
  | 151n -> b151
  | 152n -> b152
  | 153n -> b153
  | 154n -> b154
  | 155n -> b155
  | 156n -> b156
  | 157n -> b157
  | 158n -> b158
  | 159n -> b159
  | 160n -> b160
  | 161n -> b161
  | 162n -> b162
  | 163n -> b163
  | 164n -> b164
  | 165n -> b165
  | 166n -> b166
  | 167n -> b167
  | 168n -> b168
  | 169n -> b169
  | 170n -> b170
  | 171n -> b171
  | 172n -> b172
  | 173n -> b173
  | 174n -> b174
  | 175n -> b175
  | 176n -> b176
  | 177n -> b177
  | 178n -> b178
  | 179n -> b179

let mergeNodeFaults u (x : [M]attribute) (y : [M]attribute) =
  merge u x y

let transNodeFaults d e (x : [M]attribute) =
  if (match e with | a~b -> isFailed b) then
    {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  else trans d e x

let initNodeFaults d u = 
  if isFailed u then
    {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  else init d u

let d = (70.0.129.0/24)

let nodeFaults = solution(initNodeFaults d, transNodeFaults d, mergeNodeFaults)
let reachable u =
  match nodeFaults[u].selected with | None -> false | _ -> true

assert(reachable 0n, 0.99p)
assert(reachable 1n, 0.99p)
assert(reachable 2n, 0.99p)
assert(reachable 4n, 0.99p)
assert(reachable 5n, 0.99p)
assert(reachable 6n, 0.99p)
assert(reachable 7n, 0.99p)
assert(reachable 8n, 0.99p)
assert(reachable 9n, 0.99p)
assert(reachable 10n, 0.99p)
assert(reachable 11n, 0.99p)
assert(reachable 12n, 0.99p)
assert(reachable 13n, 0.99p)
assert(reachable 14n, 0.99p)
assert(reachable 15n, 0.99p)
assert(reachable 16n, 0.99p)
assert(reachable 17n, 0.99p)
assert(reachable 18n, 0.99p)
assert(reachable 19n, 0.99p)
assert(reachable 20n, 0.99p)
assert(reachable 21n, 0.99p)
assert(reachable 22n, 0.99p)
assert(reachable 23n, 0.99p)
assert(reachable 24n, 0.99p)
assert(reachable 25n, 0.99p)
assert(reachable 26n, 0.99p)
assert(reachable 27n, 0.99p)
assert(reachable 28n, 0.99p)
assert(reachable 29n, 0.99p)
assert(reachable 30n, 0.99p)
assert(reachable 31n, 0.99p)
assert(reachable 32n, 0.99p)
assert(reachable 33n, 0.99p)
assert(reachable 34n, 0.99p)
assert(reachable 35n, 0.99p)
assert(reachable 36n, 0.99p)
assert(reachable 37n, 0.99p)
assert(reachable 38n, 0.99p)
assert(reachable 39n, 0.99p)
assert(reachable 40n, 0.99p)
assert(reachable 41n, 0.99p)
assert(reachable 42n, 0.99p)
assert(reachable 43n, 0.99p)
assert(reachable 44n, 0.99p)
assert(reachable 45n, 0.99p)
assert(reachable 46n, 0.99p)
assert(reachable 47n, 0.99p)
assert(reachable 48n, 0.99p)
assert(reachable 49n, 0.99p)
assert(reachable 50n, 0.99p)
assert(reachable 51n, 0.99p)
assert(reachable 52n, 0.99p)
assert(reachable 53n, 0.99p)
assert(reachable 54n, 0.99p)
assert(reachable 55n, 0.99p)
assert(reachable 56n, 0.99p)
assert(reachable 57n, 0.99p)
assert(reachable 58n, 0.99p)
assert(reachable 59n, 0.99p)
assert(reachable 60n, 0.99p)
assert(reachable 61n, 0.99p)
assert(reachable 62n, 0.99p)
assert(reachable 63n, 0.99p)
assert(reachable 64n, 0.99p)
assert(reachable 65n, 0.99p)
assert(reachable 66n, 0.99p)
assert(reachable 67n, 0.99p)
assert(reachable 68n, 0.99p)
assert(reachable 69n, 0.99p)
assert(reachable 70n, 0.99p)
assert(reachable 71n, 0.99p)
assert(reachable 72n, 0.99p)
assert(reachable 73n, 0.99p)
assert(reachable 74n, 0.99p)
assert(reachable 75n, 0.99p)
assert(reachable 76n, 0.99p)
assert(reachable 77n, 0.99p)
assert(reachable 78n, 0.99p)
assert(reachable 79n, 0.99p)
assert(reachable 80n, 0.99p)
assert(reachable 81n, 0.99p)
assert(reachable 82n, 0.99p)
assert(reachable 83n, 0.99p)
assert(reachable 84n, 0.99p)
assert(reachable 85n, 0.99p)
assert(reachable 86n, 0.99p)
assert(reachable 87n, 0.99p)
assert(reachable 88n, 0.99p)
assert(reachable 89n, 0.99p)
assert(reachable 90n, 0.99p)
assert(reachable 91n, 0.99p)
assert(reachable 92n, 0.99p)
assert(reachable 93n, 0.99p)
assert(reachable 94n, 0.99p)
assert(reachable 95n, 0.99p)
assert(reachable 96n, 0.99p)
assert(reachable 97n, 0.99p)
assert(reachable 98n, 0.99p)
assert(reachable 99n, 0.99p)
assert(reachable 100n, 0.99p)
assert(reachable 101n, 0.99p)
assert(reachable 102n, 0.99p)
assert(reachable 103n, 0.99p)
assert(reachable 104n, 0.99p)
assert(reachable 105n, 0.99p)
assert(reachable 106n, 0.99p)
assert(reachable 107n, 0.99p)
assert(reachable 108n, 0.99p)
assert(reachable 109n, 0.99p)
assert(reachable 110n, 0.99p)
assert(reachable 111n, 0.99p)
assert(reachable 112n, 0.99p)
assert(reachable 113n, 0.99p)
assert(reachable 114n, 0.99p)
assert(reachable 115n, 0.99p)
assert(reachable 116n, 0.99p)
assert(reachable 117n, 0.99p)
assert(reachable 118n, 0.99p)
assert(reachable 119n, 0.99p)
assert(reachable 120n, 0.99p)
assert(reachable 121n, 0.99p)
assert(reachable 122n, 0.99p)
assert(reachable 123n, 0.99p)
assert(reachable 124n, 0.99p)
assert(reachable 125n, 0.99p)
assert(reachable 126n, 0.99p)
assert(reachable 127n, 0.99p)
assert(reachable 128n, 0.99p)
assert(reachable 129n, 0.99p)
assert(reachable 130n, 0.99p)
assert(reachable 131n, 0.99p)
assert(reachable 132n, 0.99p)
assert(reachable 133n, 0.99p)
assert(reachable 134n, 0.99p)
assert(reachable 135n, 0.99p)
assert(reachable 136n, 0.99p)
assert(reachable 137n, 0.99p)
assert(reachable 138n, 0.99p)
assert(reachable 139n, 0.99p)
assert(reachable 140n, 0.99p)
assert(reachable 141n, 0.99p)
assert(reachable 142n, 0.99p)
assert(reachable 143n, 0.99p)
assert(reachable 144n, 0.99p)
assert(reachable 145n, 0.99p)
assert(reachable 146n, 0.99p)
assert(reachable 147n, 0.99p)
assert(reachable 148n, 0.99p)
assert(reachable 149n, 0.99p)
assert(reachable 150n, 0.99p)
assert(reachable 151n, 0.99p)
assert(reachable 152n, 0.99p)
assert(reachable 153n, 0.99p)
assert(reachable 154n, 0.99p)
assert(reachable 155n, 0.99p)
assert(reachable 156n, 0.99p)
assert(reachable 157n, 0.99p)
assert(reachable 158n, 0.99p)
assert(reachable 159n, 0.99p)
assert(reachable 160n, 0.99p)
assert(reachable 161n, 0.99p)
assert(reachable 162n, 0.99p)
assert(reachable 163n, 0.99p)
assert(reachable 164n, 0.99p)
assert(reachable 165n, 0.99p)
assert(reachable 166n, 0.99p)
assert(reachable 167n, 0.99p)
assert(reachable 168n, 0.99p)
assert(reachable 169n, 0.99p)
assert(reachable 170n, 0.99p)
assert(reachable 171n, 0.99p)
assert(reachable 172n, 0.99p)
assert(reachable 173n, 0.99p)
assert(reachable 174n, 0.99p)
assert(reachable 175n, 0.99p)
assert(reachable 176n, 0.99p)
assert(reachable 177n, 0.99p)
assert(reachable 178n, 0.99p)
assert(reachable 179n, 0.99p)
