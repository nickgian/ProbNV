(* models bgp, ospf, static routes *)

type prefix = (int, int6) (* IP prefix; tuple of (address, length) *)
type ospfType = {ospfAd: int8; weight: int16; areaType:int2; areaId: int;}
type bgpType = {bgpAd: int8; lp: int; aslen: int; med:int; comms:set[int];}
type rib = {
    connected:option[int8]; (* Just track administrative distance *)
    static:option[int8]; (* Just track administrative distance *)
    ospf:option[ospfType];
    bgp:option[bgpType];
    selected:option[int2]; (* Which protocol has the best route *) }
type attribute = rib

(* Definitions for the "best" field *)
let p_CONNECTED = 0u2
let p_STATIC = 1u2
let p_OSPF = 2u2
let p_BGP = 3u2

(** Useful helper definitions **)

let ospfIntraArea = 0u2
let ospfInterArea = 1u2
let ospfE1 = 2u2
let ospfE2 = 3u2

(* Check if the selected protocol is x *)
let isProtocol fib x =
  match fib with
  | None -> false
  | Some y -> x = y

let getSourceNode e = 
  match e with  | a~b -> a

let min x y = x <u8 y

(* Compute the better of x and y according to f *)
(* Return a boolean (true for x, false for y) for efficiency reasons *)
let pickOption f x y =
  match (x,y) with
  | (None, _) -> false  | (_, None) -> true
  | (Some a, Some b) -> f a b

let pickMinOption = pickOption min

(* OSPF Route ranking: first compare areas, then weights *)
let betterOspf o1 o2 =
  if o1.areaType <u2 o2.areaType then true
  else if o2.areaType <u2 o1.areaType then false
  else if o1.weight <=u16 o2.weight then true else false

(* BGP Route ranking: first compare local pref, then path length, then MED *)
let betterBgp b1 b2 =
  if b1.lp > b2.lp then true
  else if b2.lp > b1.lp then false
  else if b1.aslen < b2.aslen then true
  else if b2.aslen < b1.aslen then false
  else if b1.med <= b2.med then true else false

(* Determine which of the four protocols has the best route by comparing their ADs *)
let best c s o b =
  match (c,s,o,b) with
  (* If no protocol has a route, then we have no route at all *)
  | (None,None,None,None) -> None
  | _ -> 
      (* Otherwise, get administrative distances for osfp and bgp... *)
      let o = match o with | None -> None | Some o -> Some o.ospfAd in
      let b = match b with | None -> None | Some b -> Some b.bgpAd in
      (* ...and figure out which of the protocols has the lowest AD *)
      let (x,p1) = if pickMinOption c s then (c,p_CONNECTED) else (s,p_STATIC) in
      let (y,p2) = if pickMinOption o b then (o,p_OSPF) else (b,p_BGP) in
      Some (if pickMinOption x y then p1 else p2)

(* Compute the best route for each protocol individually, then select the best one *)
let mergeValues x y =
  let c = if (pickMinOption x.connected y.connected) then x.connected else y.connected in
  let s = if (pickMinOption x.static y.static) then x.static else y.static in
  let o = if (pickOption betterOspf x.ospf y.ospf) then x.ospf else y.ospf in
  let b = if (pickOption betterBgp x.bgp y.bgp) then x.bgp else y.bgp in
  { connected = c;
    static = s;
    ospf = o;
    bgp = b;
    selected = best c s o b}

let merge node x y = mergeValues x y

let init d node =
  match node with
  | 0n -> 
if d = (10.0.0.78/31) || d = (10.0.0.216/31) || d = (200.4.141.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 1n -> 
if d = (10.0.1.30/31) || d = (200.4.217.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 2n -> 
if d = (200.4.176.0/24) || d = (10.0.0.180/31) || d = (10.0.0.224/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 3n -> 
if d = (10.0.0.194/31) || d = (10.0.0.192/31) || d = (200.4.105.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 4n -> 
if d = (10.0.1.108/31) || d = (200.4.204.0/24) || d = (10.0.0.234/31) || d = (10.0.1.112/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 5n -> 
if d = (10.0.1.78/31) || d = (200.4.85.0/24) || d = (10.0.1.86/31) || d = (10.0.0.182/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 6n -> 
if d = (10.0.0.44/31) || d = (10.0.0.42/31) || d = (200.4.146.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 7n -> 
if d = (10.0.0.174/31) || d = (200.4.175.0/24) || d = (10.0.0.176/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 8n -> 
if d = (10.0.1.58/31) || d = (10.0.0.152/31) || d = (200.4.148.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 9n -> 
if d = (10.0.0.218/31) || d = (10.0.0.216/31) || d = (200.4.117.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 10n -> 
if d = (10.0.0.222/31) || d = (200.4.86.0/24) || d = (10.0.0.220/31) || d = (10.0.0.122/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 11n -> 
if d = (10.0.1.30/31) || d = (200.4.196.0/24) || d = (10.0.1.32/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 12n -> 
if d = (200.4.223.0/24) || d = (10.0.1.54/31) || d = (10.0.1.116/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 13n -> 
if d = (10.0.0.60/31) || d = (10.0.0.102/31) || d = (200.4.109.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 14n -> 
if d = (10.0.1.78/31) || d = (10.0.0.140/31) || d = (10.0.1.76/31) || d = (10.0.1.74/31) || d = (10.0.1.72/31) || d = (200.4.118.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 15n -> 
if d = (10.0.1.6/31) || d = (200.4.142.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 16n -> 
if d = (10.0.0.134/31) || d = (10.0.1.100/31) || d = (200.4.121.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 17n -> 
if d = (10.0.0.58/31) || d = (10.0.0.56/31) || d = (200.4.116.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 18n -> 
if d = (10.0.1.70/31) || d = (10.0.1.52/31) || d = (200.4.134.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 19n -> 
if d = (10.0.1.10/31) || d = (10.0.1.40/31) || d = (200.4.119.0/24) || d = (10.0.1.16/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 20n -> 
if d = (10.0.1.88/31) || d = (10.0.0.68/31) || d = (200.4.110.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 21n -> 
if d = (200.4.194.0/24) || d = (10.0.0.116/31) || d = (10.0.0.244/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 22n -> 
if d = (10.0.0.190/31) || d = (10.0.0.188/31) || d = (200.4.170.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 23n -> 
if d = (10.0.0.172/31) || d = (10.0.0.170/31) || d = (10.0.0.26/31) || d = (10.0.0.168/31) || d = (200.4.144.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 24n -> 
if d = (200.4.193.0/24) || d = (10.0.0.202/31) || d = (10.0.0.200/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 25n -> 
if d = (10.0.0.30/31) || d = (10.0.0.158/31) || d = (200.4.211.0/24) || d = (10.0.0.156/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 26n -> 
if d = (10.0.0.210/31) || d = (10.0.1.112/31) || d = (200.4.102.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 27n -> 
if d = (10.0.0.56/31) || d = (10.0.0.178/31) || d = (200.4.108.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 28n -> 
if d = (10.0.0.222/31) || d = (10.0.1.10/31) || d = (10.0.0.106/31) || d = (200.4.187.0/24) || d = (10.0.1.8/31) || d = (10.0.0.130/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 29n -> 
if d = (10.0.0.42/31) || d = (10.0.0.40/31) || d = (10.0.0.38/31) || d = (10.0.0.36/31) || d = (200.4.137.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 30n -> 
if d = (10.0.1.46/31) || d = (10.0.0.40/31) || d = (200.4.138.0/24) || d = (10.0.0.32/31) || d = (10.0.1.48/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 31n -> 
if d = (10.0.0.190/31) || d = (10.0.1.24/31) || d = (10.0.1.22/31) || d = (200.4.232.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 32n -> 
if d = (200.4.206.0/24) || d = (10.0.0.212/31) || d = (10.0.0.242/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 33n -> 
if d = (200.4.226.0/24) || d = (10.0.1.94/31) || d = (10.0.0.100/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 34n -> 
if d = (10.0.0.74/31) || d = (10.0.0.72/31) || d = (200.4.160.0/24) || d = (10.0.0.70/31) || d = (10.0.0.68/31) || d = (10.0.0.66/31) || d = (10.0.0.64/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 35n -> 
if d = (10.0.1.42/31) || d = (10.0.0.232/31) || d = (200.4.150.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 36n -> 
if d = (10.0.1.12/31) || d = (200.4.199.0/24) || d = (10.0.1.104/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 37n -> 
if d = (10.0.1.106/31) || d = (10.0.1.120/31) || d = (10.0.0.176/31) || d = (200.4.239.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 38n -> 
if d = (10.0.1.12/31) || d = (10.0.0.74/31) || d = (10.0.0.10/31) || d = (200.4.153.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 39n -> 
if d = (200.4.99.0/24) || d = (10.0.0.126/31) || d = (10.0.0.244/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 40n -> 
if d = (10.0.1.62/31) || d = (10.0.1.60/31) || d = (200.4.161.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 41n -> 
if d = (200.4.228.0/24) || d = (10.0.1.20/31) || d = (10.0.1.18/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 42n -> 
if d = (10.0.0.238/31) || d = (200.4.189.0/24) || d = (10.0.0.196/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 43n -> 
if d = (10.0.0.252/31) || d = (10.0.0.214/31) || d = (200.4.106.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 44n -> 
if d = (200.4.197.0/24) || d = (10.0.1.72/31) || d = (10.0.1.116/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 45n -> 
if d = (10.0.1.110/31) || d = (200.4.145.0/24) || d = (10.0.0.2/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 46n -> 
if d = (10.0.0.254/31) || d = (200.4.181.0/24) || d = (10.0.0.86/31) || d = (10.0.1.0/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 47n -> 
if d = (10.0.1.22/31) || d = (10.0.0.54/31) || d = (200.4.139.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 48n -> 
if d = (200.4.224.0/24) || d = (10.0.0.206/31) || d = (10.0.1.38/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 49n -> 
if d = (10.0.1.94/31) || d = (200.4.136.0/24) || d = (10.0.0.208/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 50n -> 
if d = (200.4.96.0/24) || d = (10.0.0.78/31) || d = (10.0.0.80/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 51n -> 
if d = (200.4.89.0/24) || d = (10.0.0.170/31) || d = (10.0.0.230/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 52n -> 
if d = (10.0.0.10/31) || d = (10.0.0.8/31) || d = (200.4.125.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 53n -> 
if d = (200.4.87.0/24) || d = (10.0.0.72/31) || d = (10.0.0.146/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 54n -> 
if d = (10.0.1.14/31) || d = (10.0.0.156/31) || d = (200.4.128.0/24) || d = (10.0.1.16/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 55n -> 
if d = (10.0.1.56/31) || d = (200.4.111.0/24) || d = (10.0.0.192/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 56n -> 
if d = (10.0.0.250/31) || d = (10.0.1.4/31) || d = (200.4.114.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 57n -> 
if d = (200.4.177.0/24) || d = (10.0.0.54/31) || d = (10.0.0.52/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 58n -> 
if d = (200.4.166.0/24) || d = (10.0.0.150/31) || d = (10.0.1.114/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 59n -> 
if d = (200.4.84.0/24) || d = (10.0.0.188/31) || d = (10.0.0.164/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 60n -> 
if d = (10.0.0.186/31) || d = (10.0.1.120/31) || d = (200.4.158.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 61n -> 
if d = (10.0.0.62/31) || d = (200.4.135.0/24) || d = (10.0.1.96/31) || d = (10.0.0.48/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 62n -> 
if d = (10.0.0.8/31) || d = (10.0.0.52/31) || d = (10.0.0.194/31) || d = (10.0.1.18/31) || d = (200.4.104.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 63n -> 
if d = (10.0.0.62/31) || d = (10.0.0.60/31) || d = (10.0.0.24/31) || d = (200.4.127.0/24) || d = (10.0.0.50/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 64n -> 
if d = (200.4.218.0/24) || d = (10.0.1.38/31) || d = (10.0.0.98/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 65n -> 
if d = (200.4.205.0/24) || d = (10.0.1.74/31) || d = (10.0.0.16/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 66n -> 
if d = (10.0.0.94/31) || d = (200.4.203.0/24) || d = (10.0.0.100/31) || d = (10.0.0.98/31) || d = (10.0.0.96/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 67n -> 
if d = (10.0.0.186/31) || d = (10.0.0.184/31) || d = (200.4.155.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 68n -> 
if d = (200.4.208.0/24) || d = (10.0.0.84/31) || d = (10.0.0.82/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 69n -> 
if d = (10.0.0.250/31) || d = (10.0.0.248/31) || d = (200.4.107.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 70n -> 
if d = (200.4.202.0/24) || d = (10.0.0.118/31) || d = (10.0.0.116/31) || d = (10.0.0.114/31) || d = (10.0.0.112/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 71n -> 
if d = (200.4.198.0/24) || d = (10.0.1.26/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 72n -> 
if d = (200.4.188.0/24) || d = (10.0.0.20/31) || d = (10.0.0.18/31) || d = (10.0.0.16/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 73n -> 
if d = (10.0.0.76/31) || d = (200.4.132.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 74n -> 
if d = (10.0.0.204/31) || d = (10.0.1.28/31) || d = (10.0.0.184/31) || d = (200.4.133.0/24) || d = (10.0.1.2/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 75n -> 
if d = (10.0.0.28/31) || d = (10.0.0.218/31) || d = (200.4.180.0/24) || d = (10.0.1.104/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 76n -> 
if d = (10.0.0.92/31) || d = (200.4.192.0/24) || d = (10.0.0.34/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 77n -> 
if d = (10.0.1.62/31) || d = (200.4.167.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 78n -> 
if d = (200.4.201.0/24) || d = (10.0.0.90/31) || d = (10.0.0.88/31) || d = (10.0.0.86/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 79n -> 
if d = (10.0.0.110/31) || d = (200.4.216.0/24) || d = (10.0.0.108/31) || d = (10.0.0.106/31) || d = (10.0.0.104/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 80n -> 
if d = (10.0.1.54/31) || d = (10.0.1.36/31) || d = (200.4.100.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 81n -> 
if d = (200.4.227.0/24) || d = (10.0.1.58/31) || d = (10.0.0.198/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 82n -> 
if d = (200.4.230.0/24) || d = (10.0.0.6/31) || d = (10.0.0.246/31) || d = (10.0.0.22/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 83n -> 
if d = (10.0.1.42/31) || d = (200.4.129.0/24) || d = (10.0.1.66/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 84n -> 
if d = (10.0.0.248/31) || d = (10.0.0.102/31) || d = (200.4.151.0/24) || d = (10.0.0.4/31) || d = (10.0.1.96/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 85n -> 
if d = (10.0.0.24/31) || d = (10.0.0.22/31) || d = (200.4.152.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 86n -> 
if d = (10.0.0.94/31) || d = (10.0.0.136/31) || d = (200.4.162.0/24) || d = (10.0.1.100/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 87n -> 
if d = (10.0.1.84/31) || d = (10.0.0.96/31) || d = (200.4.237.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 88n -> 
if d = (200.4.88.0/24) || d = (10.0.0.214/31) || d = (10.0.0.212/31) || d = (10.0.0.210/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 89n -> 
if d = (10.0.0.158/31) || d = (200.4.164.0/24) || d = (10.0.1.84/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 90n -> 
if d = (10.0.0.44/31) || d = (200.4.147.0/24) || d = (10.0.1.48/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 91n -> 
if d = (200.4.195.0/24) || d = (10.0.0.104/31) || d = (10.0.1.88/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 92n -> 
if d = (10.0.0.234/31) || d = (10.0.0.232/31) || d = (200.4.130.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 93n -> 
if d = (200.4.83.0/24) || d = (10.0.1.44/31) || d = (10.0.1.6/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 94n -> 
if d = (200.4.222.0/24) || d = (10.0.0.154/31) || d = (10.0.0.178/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 95n -> 
if d = (10.0.1.92/31) || d = (200.4.131.0/24) || d = (10.0.0.226/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 96n -> 
if d = (10.0.1.14/31) || d = (10.0.0.228/31) || d = (200.4.126.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 97n -> 
if d = (10.0.0.202/31) || d = (10.0.1.90/31) || d = (200.4.120.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 98n -> 
if d = (200.4.171.0/24) || d = (10.0.1.118/31) || d = (10.0.1.20/31) || d = (10.0.1.114/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 99n -> 
if d = (200.4.225.0/24) || d = (10.0.0.132/31) || d = (10.0.0.130/31) || d = (10.0.0.128/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 100n -> 
if d = (10.0.0.126/31) || d = (10.0.0.110/31) || d = (10.0.0.124/31) || d = (200.4.235.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 101n -> 
if d = (200.4.219.0/24) || d = (10.0.0.138/31) || d = (10.0.0.136/31) || d = (10.0.0.134/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 102n -> 
if d = (10.0.0.108/31) || d = (10.0.1.8/31) || d = (200.4.154.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 103n -> 
if d = (10.0.0.238/31) || d = (200.4.209.0/24) || d = (10.0.1.50/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 104n -> 
if d = (10.0.1.46/31) || d = (10.0.0.92/31) || d = (200.4.165.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 105n -> 
if d = (200.4.92.0/24) || d = (10.0.0.46/31) || d = (10.0.0.50/31) || d = (10.0.0.48/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 106n -> 
if d = (10.0.1.76/31) || d = (200.4.174.0/24) || d = (10.0.1.86/31) || d = (10.0.1.34/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 107n -> 
if d = (200.4.214.0/24) || d = (10.0.1.36/31) || d = (10.0.1.34/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 108n -> 
if d = (200.4.97.0/24) || d = (10.0.0.142/31) || d = (10.0.0.140/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 109n -> 
if d = (200.4.210.0/24) || d = (10.0.0.88/31) || d = (10.0.0.242/31) || d = (10.0.0.240/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 110n -> 
if d = (10.0.0.124/31) || d = (10.0.0.166/31) || d = (10.0.0.164/31) || d = (200.4.140.0/24) || d = (10.0.0.112/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 111n -> 
if d = (10.0.0.28/31) || d = (10.0.0.26/31) || d = (200.4.124.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 112n -> 
if d = (200.4.200.0/24) || d = (10.0.0.122/31) || d = (10.0.0.120/31) || d = (10.0.0.84/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 113n -> 
if d = (10.0.0.206/31) || d = (10.0.0.204/31) || d = (200.4.157.0/24) || d = (10.0.0.208/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 114n -> 
if d = (200.4.94.0/24) || d = (10.0.0.168/31) || d = (10.0.1.70/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 115n -> 
if d = (200.4.82.0/24) || d = (10.0.0.228/31) || d = (10.0.0.226/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 116n -> 
if d = (200.4.98.0/24) || d = (10.0.1.118/31) || d = (10.0.0.162/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 117n -> 
if d = (10.0.1.60/31) || d = (200.4.112.0/24) || d = (10.0.1.64/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 118n -> 
if d = (200.4.173.0/24) || d = (10.0.0.150/31) || d = (10.0.0.148/31) || d = (10.0.0.146/31) || d = (10.0.0.144/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 119n -> 
if d = (200.4.159.0/24) || d = (10.0.0.182/31) || d = (10.0.0.180/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 120n -> 
if d = (10.0.1.44/31) || d = (200.4.190.0/24) || d = (10.0.0.66/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 121n -> 
if d = (200.4.207.0/24) || d = (10.0.1.24/31) || d = (10.0.1.68/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 122n -> 
if d = (200.4.213.0/24) || d = (10.0.0.252/31) || d = (10.0.1.66/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 123n -> 
if d = (10.0.0.148/31) || d = (200.4.122.0/24) || d = (10.0.0.64/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 124n -> 
if d = (10.0.1.110/31) || d = (10.0.1.102/31) || d = (200.4.103.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 125n -> 
if d = (200.4.229.0/24) || d = (10.0.0.46/31) || d = (10.0.0.12/31) || d = (10.0.0.200/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 126n -> 
if d = (10.0.0.14/31) || d = (10.0.0.154/31) || d = (10.0.0.152/31) || d = (200.4.236.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 127n -> 
if d = (200.4.172.0/24) || d = (10.0.1.50/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 128n -> 
if d = (10.0.0.172/31) || d = (10.0.1.52/31) || d = (200.4.101.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 129n -> 
if d = (10.0.0.142/31) || d = (10.0.0.220/31) || d = (10.0.1.92/31) || d = (200.4.169.0/24) || d = (10.0.0.18/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 130n -> 
if d = (200.4.179.0/24) || d = (10.0.0.120/31) || d = (10.0.0.20/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 131n -> 
if d = (200.4.91.0/24) || d = (10.0.0.166/31) || d = (10.0.0.80/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 132n -> 
if d = (10.0.1.108/31) || d = (10.0.1.98/31) || d = (200.4.113.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 133n -> 
if d = (10.0.0.0/31) || d = (10.0.1.32/31) || d = (200.4.238.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 134n -> 
if d = (10.0.0.254/31) || d = (200.4.163.0/24) || d = (10.0.1.82/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 135n -> 
if d = (10.0.1.28/31) || d = (10.0.1.26/31) || d = (200.4.178.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 136n -> 
if d = (200.4.220.0/24) || d = (10.0.1.82/31) || d = (10.0.1.0/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 137n -> 
if d = (200.4.93.0/24) || d = (10.0.0.230/31) || d = (10.0.1.68/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 138n -> 
if d = (200.4.215.0/24) || d = (10.0.0.236/31) || d = (10.0.0.36/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 139n -> 
if d = (10.0.0.174/31) || d = (10.0.1.106/31) || d = (200.4.183.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 140n -> 
if d = (10.0.0.236/31) || d = (10.0.0.76/31) || d = (200.4.182.0/24) || d = (10.0.1.40/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 141n -> 
if d = (10.0.0.14/31) || d = (10.0.0.12/31) || d = (200.4.185.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 142n -> 
if d = (200.4.90.0/24) || d = (10.0.0.6/31) || d = (10.0.0.4/31) || d = (10.0.0.2/31) || d = (10.0.0.0/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 143n -> 
if d = (10.0.0.38/31) || d = (200.4.123.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 144n -> 
if d = (200.4.184.0/24) || d = (10.0.0.114/31) || d = (10.0.0.82/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 145n -> 
if d = (200.4.212.0/24) || d = (10.0.0.128/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 146n -> 
if d = (200.4.191.0/24) || d = (10.0.0.160/31) || d = (10.0.0.144/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 147n -> 
if d = (200.4.143.0/24) || d = (10.0.1.4/31) || d = (10.0.1.2/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 148n -> 
if d = (10.0.0.198/31) || d = (200.4.149.0/24) || d = (10.0.0.196/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 149n -> 
if d = (10.0.1.90/31) || d = (10.0.0.58/31) || d = (200.4.233.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 150n -> 
if d = (10.0.0.138/31) || d = (200.4.168.0/24) || d = (10.0.1.80/31) || d = (10.0.0.224/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 151n -> 
if d = (10.0.1.56/31) || d = (10.0.1.64/31) || d = (200.4.234.0/24) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 152n -> 
if d = (200.4.221.0/24) || d = (10.0.1.102/31) || d = (10.0.0.246/31) || d = (10.0.1.80/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 153n -> 
if d = (200.4.95.0/24) || d = (10.0.0.118/31) || d = (10.0.0.132/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 154n -> 
if d = (200.4.231.0/24) || d = (10.0.0.90/31) || d = (10.0.0.70/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 155n -> 
if d = (200.4.156.0/24) || d = (10.0.1.98/31) || d = (10.0.0.240/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 156n -> 
if d = (10.0.0.30/31) || d = (10.0.0.34/31) || d = (200.4.115.0/24) || d = (10.0.0.32/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | 157n -> 
if d = (200.4.186.0/24) || d = (10.0.0.162/31) || d = (10.0.0.160/31) then
    let c = Some 0u8 in
    let s = None in
    let o = Some {ospfAd=110u8; weight=0u16; areaType=ospfIntraArea; areaId=0} in
    let b = None in
    let fib = best c s o b in
      {connected=c; static=s; ospf=o; bgp=b; selected=fib;}
     else {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  | _ -> {connected=None; static=None; ospf=None; bgp=None; selected=None;}

 let transferOspf edge o =
   match o with
   | None -> None
   | Some o -> (
     match edge with
     | (66~86) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (22~31) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (55~151) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (18~128) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (2~150) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (76~104) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (14~65) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (105~61) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (14~44) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (34~53) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (58~98) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (0~9) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (131~50) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (45~124) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (109~32) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (128~18) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (134~136) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (142~45) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (114~18) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (66~64) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (34~123) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (85~63) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (74~135) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (4~26) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (40~117) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (100~79) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (142~133) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (154~34) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (62~57) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 4u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (151~117) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (28~102) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (20~34) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (40~77) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (143~29) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (157~146) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (138~140) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (118~123) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (140~138) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (151~55) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (146~118) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (112~10) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (106~5) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (86~16) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (154~78) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (125~105) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (10~129) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (68~112) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (98~58) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (32~109) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (119~2) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (12~44) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (75~36) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (30~90) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (29~6) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (69~84) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (75~111) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (135~71) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (101~16) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (148~42) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (63~105) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (74~67) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (58~118) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (39~21) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (120~34) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (62~3) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (25~89) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (91~79) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (29~30) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (91~20) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (144~70) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (94~27) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (82~85) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (93~120) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (156~76) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (14~108) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (103~127) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (72~129) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (123~34) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (8~126) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (6~90) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (116~98) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (133~142) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (55~3) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (3~62) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (84~13) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (132~4) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (0~50) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (46~136) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (70~144) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (111~75) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (24~97) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (60~37) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (37~7) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (45~142) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (78~154) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (104~30) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (31~47) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (132~155) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (137~121) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 4u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (14~106) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (22~59) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (29~138) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (75~9) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (14~5) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (126~8) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (155~109) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (115~95) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (74~113) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (83~35) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (2~119) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (21~70) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (23~51) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (80~107) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (72~130) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (53~118) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 2u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (88~26) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (150~152) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (32~88) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (70~153) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (102~79) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (1~11) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (113~49) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (30~104) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (70~21) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (122~83) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (156~30) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 2u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (82~152) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (9~75) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (155~132) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (33~66) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (126~141) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (96~115) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (65~14) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (69~56) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (47~31) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (122~43) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (126~94) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (125~141) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (117~151) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (142~84) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (135~74) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (77~40) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (25~54) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (121~137) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (152~82) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (7~139) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (109~78) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (142~82) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (38~52) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (92~35) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (23~128) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (7~37) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (17~149) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (63~85) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (52~62) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (79~91) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (99~153) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (21~39) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (120~93) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (130~72) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (72~65) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (35~83) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (101~150) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (94~126) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (13~63) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (78~109) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (112~130) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (29~143) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (51~23) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (95~129) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (146~157) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (110~59) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (52~38) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 3u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (65~72) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (150~101) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (63~13) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (36~38) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (116~157) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (6~29) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (46~78) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (24~125) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (87~66) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (62~41) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (110~100) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (39~100) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (23~114) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (44~12) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (124~152) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (28~19) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (131~110) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (34~120) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (28~79) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (28~99) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (71~135) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (150~2) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (86~66) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (106~107) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (89~25) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (79~102) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (34~20) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (105~63) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (90~30) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (66~87) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (81~148) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (63~61) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (125~24) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (84~61) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (114~23) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (156~25) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (57~47) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (92~4) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (61~63) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (88~32) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (19~28) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (66~33) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (99~28) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 4u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (70~110) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 3u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (61~84) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (140~73) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (152~124) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (141~126) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (20~91) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (56~69) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (31~121) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (103~42) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (133~11) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (54~25) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (5~119) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (127~103) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (134~46) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (38~36) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (74~147) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (38~34) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (100~110) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 6u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (79~28) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (50~131) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (73~140) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (99~145) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (62~52) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (42~148) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (78~46) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (108~129) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (118~146) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (15~93) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (111~23) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (76~156) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (82~142) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (67~60) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (59~110) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (88~43) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (64~48) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (31~22) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (115~96) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (139~7) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (3~55) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (144~68) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (10~28) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (110~131) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (84~69) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (136~134) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (101~86) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (30~29) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (81~8) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (27~17) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (68~144) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (105~125) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (110~70) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (33~49) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (48~113) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (47~57) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (100~39) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 2u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (137~51) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (83~122) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (102~28) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (107~80) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (147~74) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (84~142) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (48~64) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (36~75) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (149~97) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (56~147) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (123~118) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (16~86) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (157~116) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (51~137) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (112~68) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (12~80) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (34~38) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (4~132) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (86~101) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (107~106) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (53~34) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (61~105) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (8~81) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (46~134) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (118~58) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (34~154) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (149~17) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (97~149) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (18~114) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (108~14) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (95~115) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (130~112) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (49~33) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 2u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (42~103) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (87~89) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (25~156) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (50~0) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (79~100) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (97~24) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (140~19) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (141~125) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (37~139) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (119~5) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (129~72) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (27~94) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (153~99) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (147~56) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (113~74) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (11~133) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (16~101) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (152~150) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (30~156) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (5~14) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (37~60) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (148~81) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (13~84) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (26~4) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (43~122) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (96~54) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (44~14) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (19~140) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (26~88) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (109~155) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (43~88) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (85~82) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (145~99) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (80~12) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (5~106) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (90~6) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (28~10) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (153~70) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (136~46) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (113~48) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (35~92) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (93~15) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (59~22) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (19~54) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (54~19) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (118~53) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (11~1) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (41~62) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (60~67) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (129~10) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (9~0) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (106~14) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (54~96) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (49~113) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (129~95) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (4~92) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (139~37) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (57~62) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (67~74) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (98~41) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (98~116) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (89~87) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (41~98) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (104~76) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (124~45) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (17~27) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (117~40) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (129~108) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (138~29) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (128~23) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (64~66) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (121~31) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (10~112) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | (23~111) -> Some {ospfAd=o.ospfAd; weight=o.weight +u16 1u16; areaType=if !(o.areaId = 0) then ospfInterArea else o.areaType; areaId=0}
     | _ -> None)

 let transferBgp d e x0 =
 None

let trans d edge x = 
  let o = transferOspf edge x.ospf in
  let b = transferBgp d edge x in
  {connected=None; static=None; ospf=o; bgp=b; selected=None}

let nodes = 158

let edges = {
  66-86; (*lexingtonid33,FastEthernet1/0 --> highttpoint,FastEthernet0/1*)
  22-31; (*darien,FastEthernet0/1 --> nahunta,FastEthernet0/0*)
  55-151; (*leesburgid143,FastEthernet0/0 --> maitland,FastEthernet0/0*)
  18-128; (*adel,FastEthernet0/0 --> tifton,FastEthernet0/0*)
  2-150; (*burlington,FastEthernet0/1 --> greensboro,FastEthernet0/0*)
  76-104; (*hickory,FastEthernet0/0 --> asheville,FastEthernet0/1*)
  14-65; (*fayetteville,FastEthernet2/0 --> wilmington,FastEthernet0/0*)
  105-61; (*harrisonburg,FastEthernet0/1 --> staunton,FastEthernet0/0*)
  14-44; (*fayetteville,FastEthernet0/0 --> jacksonville,FastEthernet0/0*)
  34-53; (*atlanta,FastEthernet0/1 --> birmingham,FastEthernet0/0*)
  58-98; (*dothan,FastEthernet0/1 --> panamattcity,FastEthernet1/0*)
  0-9; (*metter,FastEthernet0/1 --> rentz,FastEthernet0/1*)
  131-50; (*blitchton,FastEthernet0/0 --> pembroke,FastEthernet0/0*)
  45-124; (*rockyttmount,FastEthernet0/0 --> martinsville,FastEthernet0/1*)
  109-32; (*blueridge,FastEthernet0/0 --> blairsville,FastEthernet0/0*)
  128-18; (*tifton,FastEthernet0/0 --> adel,FastEthernet0/0*)
  134-136; (*ringgold,FastEthernet0/0 --> chattanooga,FastEthernet0/1*)
  142-45; (*roanoke,FastEthernet1/0 --> rockyttmount,FastEthernet0/1*)
  114-18; (*vadosta,FastEthernet0/0 --> adel,FastEthernet0/1*)
  66-64; (*lexingtonid33,FastEthernet0/0 --> boone,FastEthernet0/1*)
  34-123; (*atlanta,FastEthernet1/1 --> columbus,FastEthernet0/0*)
  85-63; (*charlottesville,FastEthernet0/1 --> waynesboro,FastEthernet0/0*)
  74-135; (*wytheville,FastEthernet0/0 --> bland,FastEthernet0/1*)
  4-26; (*andrews,FastEthernet0/1 --> hayesville,FastEthernet0/0*)
  40-117; (*avonttpark,FastEthernet0/1 --> winterttpark,FastEthernet0/0*)
  100-79; (*nodeid86,FastEthernet0/0 --> augusta,FastEthernet1/1*)
  142-133; (*roanoke,FastEthernet0/0 --> charleston,FastEthernet0/1*)
  154-34; (*canton,FastEthernet0/0 --> atlanta,FastEthernet1/0*)
  62-57; (*tallahassee,FastEthernet1/0 --> lakettcity,FastEthernet0/1*)
  151-117; (*maitland,FastEthernet0/1 --> winterttpark,FastEthernet0/1*)
  28-102; (*columbia,FastEthernet0/0 --> aiken,FastEthernet0/1*)
  20-34; (*athens,FastEthernet0/0 --> atlanta,FastEthernet0/0*)
  40-77; (*avonttpark,FastEthernet0/0 --> fortttmyers,FastEthernet0/0*)
  143-29; (*anderson,FastEthernet0/0 --> clemson,FastEthernet0/0*)
  157-146; (*pensacola,FastEthernet0/1 --> mobile,FastEthernet0/1*)
  138-140; (*hickorytttavern,FastEthernet0/0 --> abbeville,FastEthernet1/0*)
  118-123; (*montgomery,FastEthernet0/1 --> columbus,FastEthernet0/1*)
  140-138; (*abbeville,FastEthernet1/0 --> hickorytttavern,FastEthernet0/0*)
  151-55; (*maitland,FastEthernet0/0 --> leesburgid143,FastEthernet0/0*)
  146-118; (*mobile,FastEthernet0/0 --> montgomery,FastEthernet1/1*)
  112-10; (*nodeid82,FastEthernet1/0 --> sumter,FastEthernet1/0*)
  106-5; (*rockyttmountid11,FastEthernet1/0 --> raleigh,FastEthernet1/0*)
  86-16; (*highttpoint,FastEthernet0/0 --> kernersville,FastEthernet0/0*)
  154-78; (*canton,FastEthernet0/1 --> ellijay,FastEthernet0/1*)
  125-105; (*nodeid78,FastEthernet0/1 --> harrisonburg,FastEthernet0/0*)
  10-129; (*sumter,FastEthernet0/1 --> florence,FastEthernet1/0*)
  68-112; (*monksttcorner,FastEthernet0/1 --> nodeid82,FastEthernet0/1*)
  98-58; (*panamattcity,FastEthernet1/0 --> dothan,FastEthernet0/1*)
  32-109; (*blairsville,FastEthernet0/0 --> blueridge,FastEthernet0/0*)
  119-2; (*durham,FastEthernet0/0 --> burlington,FastEthernet0/0*)
  12-44; (*newttbern,FastEthernet0/0 --> jacksonville,FastEthernet0/1*)
  75-36; (*hawkinsville,FastEthernet0/0 --> leslie,FastEthernet0/0*)
  30-90; (*greenville,FastEthernet1/0 --> easley,FastEthernet0/0*)
  29-6; (*clemson,FastEthernet1/1 --> toccoa,FastEthernet0/0*)
  69-84; (*blacksburg,FastEthernet0/1 --> troutville,FastEthernet0/0*)
  75-111; (*hawkinsville,FastEthernet1/0 --> warwick,FastEthernet0/0*)
  135-71; (*bland,FastEthernet0/0 --> bluefield,FastEthernet0/0*)
  101-16; (*nodeid84,FastEthernet1/0 --> kernersville,FastEthernet0/1*)
  148-42; (*hagerstown,FastEthernet0/0 --> chamersburg,FastEthernet0/1*)
  63-105; (*waynesboro,FastEthernet0/1 --> harrisonburg,FastEthernet1/0*)
  74-67; (*wytheville,FastEthernet0/1 --> marion,FastEthernet0/1*)
  58-118; (*dothan,FastEthernet0/0 --> montgomery,FastEthernet1/0*)
  39-21; (*hiltontthead,FastEthernet0/0 --> beaufort,FastEthernet0/0*)
  120-34; (*maretta,FastEthernet0/0 --> atlanta,FastEthernet2/1*)
  62-3; (*tallahassee,FastEthernet1/1 --> ocala,FastEthernet0/1*)
  25-89; (*charlotte,FastEthernet0/0 --> concord,FastEthernet0/0*)
  91-79; (*hartwell,FastEthernet0/1 --> augusta,FastEthernet1/0*)
  29-30; (*clemson,FastEthernet0/1 --> greenville,FastEthernet0/1*)
  91-20; (*hartwell,FastEthernet0/0 --> athens,FastEthernet0/1*)
  144-70; (*charlestonid102,FastEthernet0/1 --> yemassee,FastEthernet0/1*)
  94-27; (*frontttroyal,FastEthernet0/1 --> warrenton,FastEthernet0/1*)
  82-85; (*lynchburg,FastEthernet0/0 --> charlottesville,FastEthernet0/0*)
  93-120; (*cartersville,FastEthernet0/1 --> maretta,FastEthernet0/1*)
  156-76; (*spartanburg,FastEthernet1/0 --> hickory,FastEthernet0/1*)
  14-108; (*fayetteville,FastEthernet1/1 --> tarttheel,FastEthernet0/0*)
  103-127; (*gettysburg,FastEthernet0/0 --> carlisle,FastEthernet0/0*)
  72-129; (*myrtlettbeach,FastEthernet0/0 --> florence,FastEthernet0/1*)
  123-34; (*columbus,FastEthernet0/0 --> atlanta,FastEthernet1/1*)
  8-126; (*stephensttcity,FastEthernet0/1 --> nodeid79,FastEthernet1/0*)
  6-90; (*toccoa,FastEthernet0/1 --> easley,FastEthernet0/1*)
  116-98; (*crestview,FastEthernet0/0 --> panamattcity,FastEthernet0/1*)
  133-142; (*charleston,FastEthernet0/1 --> roanoke,FastEthernet0/0*)
  55-3; (*leesburgid143,FastEthernet0/1 --> ocala,FastEthernet0/0*)
  3-62; (*ocala,FastEthernet0/1 --> tallahassee,FastEthernet1/1*)
  84-13; (*troutville,FastEthernet0/1 --> lexington,FastEthernet0/0*)
  132-4; (*murphy,FastEthernet0/0 --> andrews,FastEthernet1/0*)
  0-50; (*metter,FastEthernet0/0 --> pembroke,FastEthernet0/1*)
  46-136; (*dalton,FastEthernet0/0 --> chattanooga,FastEthernet0/0*)
  70-144; (*yemassee,FastEthernet0/1 --> charlestonid102,FastEthernet0/1*)
  111-75; (*warwick,FastEthernet0/0 --> hawkinsville,FastEthernet1/0*)
  24-97; (*winchester,FastEthernet0/0 --> leesburg,FastEthernet0/1*)
  60-37; (*abingdon,FastEthernet0/0 --> bristol,FastEthernet0/0*)
  37-7; (*bristol,FastEthernet1/0 --> kingsport,FastEthernet0/0*)
  45-142; (*rockyttmount,FastEthernet0/1 --> roanoke,FastEthernet1/0*)
  78-154; (*ellijay,FastEthernet0/1 --> canton,FastEthernet0/1*)
  104-30; (*asheville,FastEthernet0/0 --> greenville,FastEthernet0/0*)
  31-47; (*nahunta,FastEthernet0/1 --> jacksonvilleid5,FastEthernet0/1*)
  132-155; (*murphy,FastEthernet0/1 --> copperhill,FastEthernet0/1*)
  137-121; (*douglas,FastEthernet0/0 --> waycross,FastEthernet0/0*)
  14-106; (*fayetteville,FastEthernet1/0 --> rockyttmountid11,FastEthernet0/0*)
  22-59; (*darien,FastEthernet0/0 --> hinesville,FastEthernet0/0*)
  29-138; (*clemson,FastEthernet1/0 --> hickorytttavern,FastEthernet0/1*)
  75-9; (*hawkinsville,FastEthernet0/1 --> rentz,FastEthernet0/0*)
  14-5; (*fayetteville,FastEthernet0/1 --> raleigh,FastEthernet0/1*)
  126-8; (*nodeid79,FastEthernet1/0 --> stephensttcity,FastEthernet0/1*)
  155-109; (*copperhill,FastEthernet0/0 --> blueridge,FastEthernet0/1*)
  115-95; (*kershaw,FastEthernet0/0 --> bethune,FastEthernet0/1*)
  74-113; (*wytheville,FastEthernet1/1 --> sparta,FastEthernet1/0*)
  83-35; (*sylva,FastEthernet0/0 --> cherokee,FastEthernet0/1*)
  2-119; (*burlington,FastEthernet0/0 --> durham,FastEthernet0/0*)
  21-70; (*beaufort,FastEthernet0/1 --> yemassee,FastEthernet0/0*)
  23-51; (*omega,FastEthernet1/1 --> willacoochee,FastEthernet0/1*)
  80-107; (*kinston,FastEthernet0/0 --> greenvilleid16,FastEthernet0/0*)
  72-130; (*myrtlettbeach,FastEthernet0/1 --> georgetown,FastEthernet0/0*)
  53-118; (*birmingham,FastEthernet0/1 --> montgomery,FastEthernet0/0*)
  88-26; (*youngttharris,FastEthernet0/1 --> hayesville,FastEthernet0/1*)
  150-152; (*greensboro,FastEthernet0/1 --> danville,FastEthernet0/0*)
  32-88; (*blairsville,FastEthernet0/1 --> youngttharris,FastEthernet0/0*)
  70-153; (*yemassee,FastEthernet1/1 --> walterboro,FastEthernet0/1*)
  102-79; (*aiken,FastEthernet0/0 --> augusta,FastEthernet0/0*)
  1-11; (*ashland,FastEthernet0/0 --> huntington,FastEthernet0/0*)
  113-49; (*sparta,FastEthernet0/1 --> levelttcross,FastEthernet0/1*)
  30-104; (*greenville,FastEthernet0/0 --> asheville,FastEthernet0/0*)
  70-21; (*yemassee,FastEthernet0/0 --> beaufort,FastEthernet0/1*)
  122-83; (*franklin,FastEthernet0/1 --> sylva,FastEthernet0/1*)
  156-30; (*spartanburg,FastEthernet0/1 --> greenville,FastEthernet1/1*)
  82-152; (*lynchburg,FastEthernet0/1 --> danville,FastEthernet0/1*)
  9-75; (*rentz,FastEthernet0/0 --> hawkinsville,FastEthernet0/1*)
  155-132; (*copperhill,FastEthernet0/1 --> murphy,FastEthernet0/1*)
  33-66; (*courtney,FastEthernet0/1 --> lexingtonid33,FastEthernet0/1*)
  126-141; (*nodeid79,FastEthernet0/0 --> edinburg,FastEthernet0/1*)
  96-115; (*lancaster,FastEthernet0/0 --> kershaw,FastEthernet0/1*)
  65-14; (*wilmington,FastEthernet0/0 --> fayetteville,FastEthernet2/0*)
  69-56; (*blacksburg,FastEthernet0/0 --> christiansburg,FastEthernet0/0*)
  47-31; (*jacksonvilleid5,FastEthernet0/1 --> nahunta,FastEthernet0/1*)
  122-43; (*franklin,FastEthernet0/0 --> hiawassee,FastEthernet0/0*)
  126-94; (*nodeid79,FastEthernet0/1 --> frontttroyal,FastEthernet0/0*)
  125-141; (*nodeid78,FastEthernet0/0 --> edinburg,FastEthernet0/0*)
  117-151; (*winterttpark,FastEthernet0/1 --> maitland,FastEthernet0/1*)
  142-84; (*roanoke,FastEthernet1/1 --> troutville,FastEthernet1/0*)
  135-74; (*bland,FastEthernet0/1 --> wytheville,FastEthernet0/0*)
  77-40; (*fortttmyers,FastEthernet0/0 --> avonttpark,FastEthernet0/0*)
  25-54; (*charlotte,FastEthernet0/1 --> rocktthill,FastEthernet0/0*)
  121-137; (*waycross,FastEthernet0/0 --> douglas,FastEthernet0/0*)
  152-82; (*danville,FastEthernet0/1 --> lynchburg,FastEthernet0/1*)
  7-139; (*kingsport,FastEthernet0/1 --> johnsonttcity,FastEthernet0/1*)
  109-78; (*blueridge,FastEthernet1/0 --> ellijay,FastEthernet0/0*)
  142-82; (*roanoke,FastEthernet0/1 --> lynchburg,FastEthernet1/0*)
  38-52; (*macon,FastEthernet0/0 --> albany,FastEthernet0/0*)
  92-35; (*brysonttcity,FastEthernet0/1 --> cherokee,FastEthernet0/0*)
  23-128; (*omega,FastEthernet0/0 --> tifton,FastEthernet0/1*)
  7-37; (*kingsport,FastEthernet0/0 --> bristol,FastEthernet1/0*)
  17-149; (*ashburn,FastEthernet0/0 --> herndon,FastEthernet0/0*)
  63-85; (*waynesboro,FastEthernet0/0 --> charlottesville,FastEthernet0/1*)
  52-62; (*albany,FastEthernet0/1 --> tallahassee,FastEthernet0/0*)
  79-91; (*augusta,FastEthernet1/0 --> hartwell,FastEthernet0/1*)
  99-153; (*nodeid85,FastEthernet1/0 --> walterboro,FastEthernet0/0*)
  21-39; (*beaufort,FastEthernet0/0 --> hiltontthead,FastEthernet0/0*)
  120-93; (*maretta,FastEthernet0/1 --> cartersville,FastEthernet0/1*)
  130-72; (*georgetown,FastEthernet0/0 --> myrtlettbeach,FastEthernet0/1*)
  72-65; (*myrtlettbeach,FastEthernet1/0 --> wilmington,FastEthernet0/1*)
  35-83; (*cherokee,FastEthernet0/1 --> sylva,FastEthernet0/0*)
  101-150; (*nodeid84,FastEthernet0/0 --> greensboro,FastEthernet1/0*)
  94-126; (*frontttroyal,FastEthernet0/0 --> nodeid79,FastEthernet0/1*)
  13-63; (*lexington,FastEthernet0/1 --> waynesboro,FastEthernet1/0*)
  78-109; (*ellijay,FastEthernet0/0 --> blueridge,FastEthernet1/0*)
  112-130; (*nodeid82,FastEthernet0/0 --> georgetown,FastEthernet0/1*)
  29-143; (*clemson,FastEthernet0/0 --> anderson,FastEthernet0/0*)
  51-23; (*willacoochee,FastEthernet0/1 --> omega,FastEthernet1/1*)
  95-129; (*bethune,FastEthernet0/0 --> florence,FastEthernet0/0*)
  146-157; (*mobile,FastEthernet0/1 --> pensacola,FastEthernet0/1*)
  110-59; (*savannah,FastEthernet0/1 --> hinesville,FastEthernet0/1*)
  52-38; (*albany,FastEthernet0/0 --> macon,FastEthernet0/0*)
  65-72; (*wilmington,FastEthernet0/1 --> myrtlettbeach,FastEthernet1/0*)
  150-101; (*greensboro,FastEthernet1/0 --> nodeid84,FastEthernet0/0*)
  63-13; (*waynesboro,FastEthernet1/0 --> lexington,FastEthernet0/1*)
  36-38; (*leslie,FastEthernet0/1 --> macon,FastEthernet1/0*)
  116-157; (*crestview,FastEthernet0/1 --> pensacola,FastEthernet0/0*)
  6-29; (*toccoa,FastEthernet0/0 --> clemson,FastEthernet1/1*)
  46-78; (*dalton,FastEthernet0/1 --> ellijay,FastEthernet1/0*)
  24-125; (*winchester,FastEthernet0/1 --> nodeid78,FastEthernet1/0*)
  87-66; (*salisbury,FastEthernet0/1 --> lexingtonid33,FastEthernet1/1*)
  62-41; (*tallahassee,FastEthernet0/1 --> blountstown,FastEthernet0/1*)
  110-100; (*savannah,FastEthernet1/0 --> nodeid86,FastEthernet1/0*)
  39-100; (*hiltontthead,FastEthernet0/1 --> nodeid86,FastEthernet0/1*)
  23-114; (*omega,FastEthernet0/1 --> vadosta,FastEthernet0/1*)
  44-12; (*jacksonville,FastEthernet0/1 --> newttbern,FastEthernet0/0*)
  124-152; (*martinsville,FastEthernet0/0 --> danville,FastEthernet1/0*)
  28-19; (*columbia,FastEthernet1/0 --> chester,FastEthernet0/1*)
  131-110; (*blitchton,FastEthernet0/1 --> savannah,FastEthernet0/0*)
  34-120; (*atlanta,FastEthernet2/1 --> maretta,FastEthernet0/0*)
  28-79; (*columbia,FastEthernet0/1 --> augusta,FastEthernet0/1*)
  28-99; (*columbia,FastEthernet1/1 --> nodeid85,FastEthernet0/0*)
  71-135; (*bluefield,FastEthernet0/0 --> bland,FastEthernet0/0*)
  150-2; (*greensboro,FastEthernet0/0 --> burlington,FastEthernet0/1*)
  86-66; (*highttpoint,FastEthernet0/1 --> lexingtonid33,FastEthernet1/0*)
  106-107; (*rockyttmountid11,FastEthernet0/1 --> greenvilleid16,FastEthernet0/1*)
  89-25; (*concord,FastEthernet0/0 --> charlotte,FastEthernet0/0*)
  79-102; (*augusta,FastEthernet0/0 --> aiken,FastEthernet0/0*)
  34-20; (*atlanta,FastEthernet0/0 --> athens,FastEthernet0/0*)
  105-63; (*harrisonburg,FastEthernet1/0 --> waynesboro,FastEthernet0/1*)
  90-30; (*easley,FastEthernet0/0 --> greenville,FastEthernet1/0*)
  66-87; (*lexingtonid33,FastEthernet1/1 --> salisbury,FastEthernet0/1*)
  81-148; (*martinsburg,FastEthernet0/0 --> hagerstown,FastEthernet0/1*)
  63-61; (*waynesboro,FastEthernet1/1 --> staunton,FastEthernet1/0*)
  125-24; (*nodeid78,FastEthernet1/0 --> winchester,FastEthernet0/1*)
  84-61; (*troutville,FastEthernet1/1 --> staunton,FastEthernet0/1*)
  114-23; (*vadosta,FastEthernet0/1 --> omega,FastEthernet0/1*)
  156-25; (*spartanburg,FastEthernet0/0 --> charlotte,FastEthernet1/0*)
  57-47; (*lakettcity,FastEthernet0/0 --> jacksonvilleid5,FastEthernet0/0*)
  92-4; (*brysonttcity,FastEthernet0/0 --> andrews,FastEthernet0/0*)
  61-63; (*staunton,FastEthernet1/0 --> waynesboro,FastEthernet1/1*)
  88-32; (*youngttharris,FastEthernet0/0 --> blairsville,FastEthernet0/1*)
  19-28; (*chester,FastEthernet0/1 --> columbia,FastEthernet1/0*)
  66-33; (*lexingtonid33,FastEthernet0/1 --> courtney,FastEthernet0/1*)
  99-28; (*nodeid85,FastEthernet0/0 --> columbia,FastEthernet1/1*)
  70-110; (*yemassee,FastEthernet1/0 --> savannah,FastEthernet1/1*)
  61-84; (*staunton,FastEthernet0/1 --> troutville,FastEthernet1/1*)
  140-73; (*abbeville,FastEthernet0/1 --> greenwood,FastEthernet0/0*)
  152-124; (*danville,FastEthernet1/0 --> martinsville,FastEthernet0/0*)
  141-126; (*edinburg,FastEthernet0/1 --> nodeid79,FastEthernet0/0*)
  20-91; (*athens,FastEthernet0/1 --> hartwell,FastEthernet0/0*)
  56-69; (*christiansburg,FastEthernet0/0 --> blacksburg,FastEthernet0/0*)
  31-121; (*nahunta,FastEthernet1/0 --> waycross,FastEthernet0/1*)
  103-42; (*gettysburg,FastEthernet0/1 --> chamersburg,FastEthernet0/0*)
  133-11; (*charleston,FastEthernet0/0 --> huntington,FastEthernet0/1*)
  54-25; (*rocktthill,FastEthernet0/0 --> charlotte,FastEthernet0/1*)
  5-119; (*raleigh,FastEthernet0/0 --> durham,FastEthernet0/1*)
  127-103; (*carlisle,FastEthernet0/0 --> gettysburg,FastEthernet0/0*)
  134-46; (*ringgold,FastEthernet0/1 --> dalton,FastEthernet1/0*)
  38-36; (*macon,FastEthernet1/0 --> leslie,FastEthernet0/1*)
  74-147; (*wytheville,FastEthernet1/0 --> radford,FastEthernet0/1*)
  38-34; (*macon,FastEthernet0/1 --> atlanta,FastEthernet2/0*)
  100-110; (*nodeid86,FastEthernet1/0 --> savannah,FastEthernet1/0*)
  79-28; (*augusta,FastEthernet0/1 --> columbia,FastEthernet0/1*)
  50-131; (*pembroke,FastEthernet0/0 --> blitchton,FastEthernet0/0*)
  73-140; (*greenwood,FastEthernet0/0 --> abbeville,FastEthernet0/1*)
  99-145; (*nodeid85,FastEthernet0/1 --> orangeburg,FastEthernet0/0*)
  62-52; (*tallahassee,FastEthernet0/0 --> albany,FastEthernet0/1*)
  42-148; (*chamersburg,FastEthernet0/1 --> hagerstown,FastEthernet0/0*)
  78-46; (*ellijay,FastEthernet1/0 --> dalton,FastEthernet0/1*)
  108-129; (*tarttheel,FastEthernet0/1 --> florence,FastEthernet1/1*)
  118-146; (*montgomery,FastEthernet1/1 --> mobile,FastEthernet0/0*)
  15-93; (*calhoun,FastEthernet0/0 --> cartersville,FastEthernet0/0*)
  111-23; (*warwick,FastEthernet0/1 --> omega,FastEthernet1/0*)
  76-156; (*hickory,FastEthernet0/1 --> spartanburg,FastEthernet1/0*)
  82-142; (*lynchburg,FastEthernet1/0 --> roanoke,FastEthernet0/1*)
  67-60; (*marion,FastEthernet0/0 --> abingdon,FastEthernet0/1*)
  59-110; (*hinesville,FastEthernet0/1 --> savannah,FastEthernet0/1*)
  88-43; (*youngttharris,FastEthernet1/0 --> hiawassee,FastEthernet0/1*)
  64-48; (*boone,FastEthernet0/0 --> baldwin,FastEthernet0/0*)
  31-22; (*nahunta,FastEthernet0/0 --> darien,FastEthernet0/1*)
  115-96; (*kershaw,FastEthernet0/1 --> lancaster,FastEthernet0/0*)
  139-7; (*johnsonttcity,FastEthernet0/1 --> kingsport,FastEthernet0/1*)
  3-55; (*ocala,FastEthernet0/0 --> leesburgid143,FastEthernet0/1*)
  144-68; (*charlestonid102,FastEthernet0/0 --> monksttcorner,FastEthernet0/0*)
  10-28; (*sumter,FastEthernet0/0 --> columbia,FastEthernet2/0*)
  110-131; (*savannah,FastEthernet0/0 --> blitchton,FastEthernet0/1*)
  84-69; (*troutville,FastEthernet0/0 --> blacksburg,FastEthernet0/1*)
  136-134; (*chattanooga,FastEthernet0/1 --> ringgold,FastEthernet0/0*)
  101-86; (*nodeid84,FastEthernet0/1 --> highttpoint,FastEthernet1/0*)
  30-29; (*greenville,FastEthernet0/1 --> clemson,FastEthernet0/1*)
  81-8; (*martinsburg,FastEthernet0/1 --> stephensttcity,FastEthernet0/0*)
  27-17; (*warrenton,FastEthernet0/0 --> ashburn,FastEthernet0/1*)
  68-144; (*monksttcorner,FastEthernet0/0 --> charlestonid102,FastEthernet0/0*)
  105-125; (*harrisonburg,FastEthernet0/0 --> nodeid78,FastEthernet0/1*)
  110-70; (*savannah,FastEthernet1/1 --> yemassee,FastEthernet1/0*)
  33-49; (*courtney,FastEthernet0/0 --> levelttcross,FastEthernet0/0*)
  48-113; (*baldwin,FastEthernet0/1 --> sparta,FastEthernet0/0*)
  47-57; (*jacksonvilleid5,FastEthernet0/0 --> lakettcity,FastEthernet0/0*)
  100-39; (*nodeid86,FastEthernet0/1 --> hiltontthead,FastEthernet0/1*)
  137-51; (*douglas,FastEthernet0/1 --> willacoochee,FastEthernet0/0*)
  83-122; (*sylva,FastEthernet0/1 --> franklin,FastEthernet0/1*)
  102-28; (*aiken,FastEthernet0/1 --> columbia,FastEthernet0/0*)
  107-80; (*greenvilleid16,FastEthernet0/0 --> kinston,FastEthernet0/0*)
  147-74; (*radford,FastEthernet0/1 --> wytheville,FastEthernet1/0*)
  84-142; (*troutville,FastEthernet1/0 --> roanoke,FastEthernet1/1*)
  48-64; (*baldwin,FastEthernet0/0 --> boone,FastEthernet0/0*)
  36-75; (*leslie,FastEthernet0/0 --> hawkinsville,FastEthernet0/0*)
  149-97; (*herndon,FastEthernet0/1 --> leesburg,FastEthernet0/0*)
  56-147; (*christiansburg,FastEthernet0/1 --> radford,FastEthernet0/0*)
  123-118; (*columbus,FastEthernet0/1 --> montgomery,FastEthernet0/1*)
  16-86; (*kernersville,FastEthernet0/0 --> highttpoint,FastEthernet0/0*)
  157-116; (*pensacola,FastEthernet0/0 --> crestview,FastEthernet0/1*)
  51-137; (*willacoochee,FastEthernet0/0 --> douglas,FastEthernet0/1*)
  112-68; (*nodeid82,FastEthernet0/1 --> monksttcorner,FastEthernet0/1*)
  12-80; (*newttbern,FastEthernet0/1 --> kinston,FastEthernet0/1*)
  34-38; (*atlanta,FastEthernet2/0 --> macon,FastEthernet0/1*)
  4-132; (*andrews,FastEthernet1/0 --> murphy,FastEthernet0/0*)
  86-101; (*highttpoint,FastEthernet1/0 --> nodeid84,FastEthernet0/1*)
  107-106; (*greenvilleid16,FastEthernet0/1 --> rockyttmountid11,FastEthernet0/1*)
  53-34; (*birmingham,FastEthernet0/0 --> atlanta,FastEthernet0/1*)
  61-105; (*staunton,FastEthernet0/0 --> harrisonburg,FastEthernet0/1*)
  8-81; (*stephensttcity,FastEthernet0/0 --> martinsburg,FastEthernet0/1*)
  46-134; (*dalton,FastEthernet1/0 --> ringgold,FastEthernet0/1*)
  118-58; (*montgomery,FastEthernet1/0 --> dothan,FastEthernet0/0*)
  34-154; (*atlanta,FastEthernet1/0 --> canton,FastEthernet0/0*)
  149-17; (*herndon,FastEthernet0/0 --> ashburn,FastEthernet0/0*)
  97-149; (*leesburg,FastEthernet0/0 --> herndon,FastEthernet0/1*)
  18-114; (*adel,FastEthernet0/1 --> vadosta,FastEthernet0/0*)
  108-14; (*tarttheel,FastEthernet0/0 --> fayetteville,FastEthernet1/1*)
  95-115; (*bethune,FastEthernet0/1 --> kershaw,FastEthernet0/0*)
  130-112; (*georgetown,FastEthernet0/1 --> nodeid82,FastEthernet0/0*)
  49-33; (*levelttcross,FastEthernet0/0 --> courtney,FastEthernet0/0*)
  42-103; (*chamersburg,FastEthernet0/0 --> gettysburg,FastEthernet0/1*)
  87-89; (*salisbury,FastEthernet0/0 --> concord,FastEthernet0/1*)
  25-156; (*charlotte,FastEthernet1/0 --> spartanburg,FastEthernet0/0*)
  50-0; (*pembroke,FastEthernet0/1 --> metter,FastEthernet0/0*)
  79-100; (*augusta,FastEthernet1/1 --> nodeid86,FastEthernet0/0*)
  97-24; (*leesburg,FastEthernet0/1 --> winchester,FastEthernet0/0*)
  140-19; (*abbeville,FastEthernet0/0 --> chester,FastEthernet0/0*)
  141-125; (*edinburg,FastEthernet0/0 --> nodeid78,FastEthernet0/0*)
  37-139; (*bristol,FastEthernet0/1 --> johnsonttcity,FastEthernet0/0*)
  119-5; (*durham,FastEthernet0/1 --> raleigh,FastEthernet0/0*)
  129-72; (*florence,FastEthernet0/1 --> myrtlettbeach,FastEthernet0/0*)
  27-94; (*warrenton,FastEthernet0/1 --> frontttroyal,FastEthernet0/1*)
  153-99; (*walterboro,FastEthernet0/0 --> nodeid85,FastEthernet1/0*)
  147-56; (*radford,FastEthernet0/0 --> christiansburg,FastEthernet0/1*)
  113-74; (*sparta,FastEthernet1/0 --> wytheville,FastEthernet1/1*)
  11-133; (*huntington,FastEthernet0/1 --> charleston,FastEthernet0/0*)
  16-101; (*kernersville,FastEthernet0/1 --> nodeid84,FastEthernet1/0*)
  152-150; (*danville,FastEthernet0/0 --> greensboro,FastEthernet0/1*)
  30-156; (*greenville,FastEthernet1/1 --> spartanburg,FastEthernet0/1*)
  5-14; (*raleigh,FastEthernet0/1 --> fayetteville,FastEthernet0/1*)
  37-60; (*bristol,FastEthernet0/0 --> abingdon,FastEthernet0/0*)
  148-81; (*hagerstown,FastEthernet0/1 --> martinsburg,FastEthernet0/0*)
  13-84; (*lexington,FastEthernet0/0 --> troutville,FastEthernet0/1*)
  26-4; (*hayesville,FastEthernet0/0 --> andrews,FastEthernet0/1*)
  43-122; (*hiawassee,FastEthernet0/0 --> franklin,FastEthernet0/0*)
  96-54; (*lancaster,FastEthernet0/1 --> rocktthill,FastEthernet1/0*)
  44-14; (*jacksonville,FastEthernet0/0 --> fayetteville,FastEthernet0/0*)
  19-140; (*chester,FastEthernet0/0 --> abbeville,FastEthernet0/0*)
  26-88; (*hayesville,FastEthernet0/1 --> youngttharris,FastEthernet0/1*)
  109-155; (*blueridge,FastEthernet0/1 --> copperhill,FastEthernet0/0*)
  43-88; (*hiawassee,FastEthernet0/1 --> youngttharris,FastEthernet1/0*)
  85-82; (*charlottesville,FastEthernet0/0 --> lynchburg,FastEthernet0/0*)
  145-99; (*orangeburg,FastEthernet0/0 --> nodeid85,FastEthernet0/1*)
  80-12; (*kinston,FastEthernet0/1 --> newttbern,FastEthernet0/1*)
  5-106; (*raleigh,FastEthernet1/0 --> rockyttmountid11,FastEthernet1/0*)
  90-6; (*easley,FastEthernet0/1 --> toccoa,FastEthernet0/1*)
  28-10; (*columbia,FastEthernet2/0 --> sumter,FastEthernet0/0*)
  153-70; (*walterboro,FastEthernet0/1 --> yemassee,FastEthernet1/1*)
  136-46; (*chattanooga,FastEthernet0/0 --> dalton,FastEthernet0/0*)
  113-48; (*sparta,FastEthernet0/0 --> baldwin,FastEthernet0/1*)
  35-92; (*cherokee,FastEthernet0/0 --> brysonttcity,FastEthernet0/1*)
  93-15; (*cartersville,FastEthernet0/0 --> calhoun,FastEthernet0/0*)
  59-22; (*hinesville,FastEthernet0/0 --> darien,FastEthernet0/0*)
  19-54; (*chester,FastEthernet1/0 --> rocktthill,FastEthernet0/1*)
  54-19; (*rocktthill,FastEthernet0/1 --> chester,FastEthernet1/0*)
  118-53; (*montgomery,FastEthernet0/0 --> birmingham,FastEthernet0/1*)
  11-1; (*huntington,FastEthernet0/0 --> ashland,FastEthernet0/0*)
  41-62; (*blountstown,FastEthernet0/1 --> tallahassee,FastEthernet0/1*)
  60-67; (*abingdon,FastEthernet0/1 --> marion,FastEthernet0/0*)
  129-10; (*florence,FastEthernet1/0 --> sumter,FastEthernet0/1*)
  9-0; (*rentz,FastEthernet0/1 --> metter,FastEthernet0/1*)
  106-14; (*rockyttmountid11,FastEthernet0/0 --> fayetteville,FastEthernet1/0*)
  54-96; (*rocktthill,FastEthernet1/0 --> lancaster,FastEthernet0/1*)
  49-113; (*levelttcross,FastEthernet0/1 --> sparta,FastEthernet0/1*)
  129-95; (*florence,FastEthernet0/0 --> bethune,FastEthernet0/0*)
  4-92; (*andrews,FastEthernet0/0 --> brysonttcity,FastEthernet0/0*)
  139-37; (*johnsonttcity,FastEthernet0/0 --> bristol,FastEthernet0/1*)
  57-62; (*lakettcity,FastEthernet0/1 --> tallahassee,FastEthernet1/0*)
  67-74; (*marion,FastEthernet0/1 --> wytheville,FastEthernet0/1*)
  98-41; (*panamattcity,FastEthernet0/0 --> blountstown,FastEthernet0/0*)
  98-116; (*panamattcity,FastEthernet0/1 --> crestview,FastEthernet0/0*)
  89-87; (*concord,FastEthernet0/1 --> salisbury,FastEthernet0/0*)
  41-98; (*blountstown,FastEthernet0/0 --> panamattcity,FastEthernet0/0*)
  104-76; (*asheville,FastEthernet0/1 --> hickory,FastEthernet0/0*)
  124-45; (*martinsville,FastEthernet0/1 --> rockyttmount,FastEthernet0/0*)
  17-27; (*ashburn,FastEthernet0/1 --> warrenton,FastEthernet0/0*)
  117-40; (*winterttpark,FastEthernet0/0 --> avonttpark,FastEthernet0/1*)
  129-108; (*florence,FastEthernet1/1 --> tarttheel,FastEthernet0/1*)
  138-29; (*hickorytttavern,FastEthernet0/1 --> clemson,FastEthernet1/0*)
  128-23; (*tifton,FastEthernet0/1 --> omega,FastEthernet0/0*)
  64-66; (*boone,FastEthernet0/1 --> lexingtonid33,FastEthernet0/0*)
  121-31; (*waycross,FastEthernet0/1 --> nahunta,FastEthernet1/0*)
  10-112; (*sumter,FastEthernet1/0 --> nodeid82,FastEthernet1/0*)
  23-111; (*omega,FastEthernet1/0 --> warwick,FastEthernet0/1*)
}

(*
{metter=0, ashland=1, burlington=2, ocala=3, andrews=4, raleigh=5, toccoa=6, kingsport=7, stephensttcity=8, rentz=9, sumter=10, huntington=11, newttbern=12, lexington=13, fayetteville=14, calhoun=15, kernersville=16, ashburn=17, adel=18, chester=19, athens=20, beaufort=21, darien=22, omega=23, winchester=24, charlotte=25, hayesville=26, warrenton=27, columbia=28, clemson=29, greenville=30, nahunta=31, blairsville=32, courtney=33, atlanta=34, cherokee=35, leslie=36, bristol=37, macon=38, hiltontthead=39, avonttpark=40, blountstown=41, chamersburg=42, hiawassee=43, jacksonville=44, rockyttmount=45, dalton=46, jacksonvilleid5=47, baldwin=48, levelttcross=49, pembroke=50, willacoochee=51, albany=52, birmingham=53, rocktthill=54, leesburgid143=55, christiansburg=56, lakettcity=57, dothan=58, hinesville=59, abingdon=60, staunton=61, tallahassee=62, waynesboro=63, boone=64, wilmington=65, lexingtonid33=66, marion=67, monksttcorner=68, blacksburg=69, yemassee=70, bluefield=71, myrtlettbeach=72, greenwood=73, wytheville=74, hawkinsville=75, hickory=76, fortttmyers=77, ellijay=78, augusta=79, kinston=80, martinsburg=81, lynchburg=82, sylva=83, troutville=84, charlottesville=85, highttpoint=86, salisbury=87, youngttharris=88, concord=89, easley=90, hartwell=91, brysonttcity=92, cartersville=93, frontttroyal=94, bethune=95, lancaster=96, leesburg=97, panamattcity=98, nodeid85=99, nodeid86=100, nodeid84=101, aiken=102, gettysburg=103, asheville=104, harrisonburg=105, rockyttmountid11=106, greenvilleid16=107, tarttheel=108, blueridge=109, savannah=110, warwick=111, nodeid82=112, sparta=113, vadosta=114, kershaw=115, crestview=116, winterttpark=117, montgomery=118, durham=119, maretta=120, waycross=121, franklin=122, columbus=123, martinsville=124, nodeid78=125, nodeid79=126, carlisle=127, tifton=128, florence=129, georgetown=130, blitchton=131, murphy=132, charleston=133, ringgold=134, bland=135, chattanooga=136, douglas=137, hickorytttavern=138, johnsonttcity=139, abbeville=140, edinburg=141, roanoke=142, anderson=143, charlestonid102=144, orangeburg=145, mobile=146, radford=147, hagerstown=148, herndon=149, greensboro=150, maitland=151, danville=152, walterboro=153, canton=154, copperhill=155, spartanburg=156, pensacola=157}*)