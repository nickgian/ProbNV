include "bics_control.nv"

    symbolic b0_37: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b0_21: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b0_13: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b0_31: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b0_17: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b1_11: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b1_38: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b1_30: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b1_18: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b1_39: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b1_37: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b2_45: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b3_45: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b3_10: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b3_12: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b4_21: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b5_21: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b6_33: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b7_23: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b7_16: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b7_27: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b8_24: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b8_46: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b8_35: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b9_12: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b9_45: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b9_33: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b10_27: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b10_45: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b11_37: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b11_46: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b12_23: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b14_42: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b15_30: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b15_33: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b16_34: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b16_20: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b17_21: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b17_44: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b17_32: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b17_45: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b18_48: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b18_47: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b18_43: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b19_23: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b19_20: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b21_41: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b21_22: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b21_45: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b21_32: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b21_37: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b23_42: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b24_37: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b25_46: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b26_43: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b27_40: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b28_46: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b29_45: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b30_33: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b30_36: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b30_45: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b33_46: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b41_43: bool = | true -> 0.05p | false -> 0.95p 
          symbolic b43_45: bool = | true -> 0.05p | false -> 0.95p 

let isFailed e = 
  match e with
  | 0~37 -> b0_37
  | 0~21 -> b0_21
  | 0~13 -> b0_13
  | 0~31 -> b0_31
  | 0~17 -> b0_17
  | 1~11 -> b1_11
  | 1~38 -> b1_38
  | 1~30 -> b1_30
  | 1~18 -> b1_18
  | 1~39 -> b1_39
  | 1~37 -> b1_37
  | 2~45 -> b2_45
  | 3~45 -> b3_45
  | 3~10 -> b3_10
  | 3~12 -> b3_12
  | 4~21 -> b4_21
  | 5~21 -> b5_21
  | 6~33 -> b6_33
  | 7~23 -> b7_23
  | 7~16 -> b7_16
  | 7~27 -> b7_27
  | 8~24 -> b8_24
  | 8~46 -> b8_46
  | 8~35 -> b8_35
  | 9~12 -> b9_12
  | 9~45 -> b9_45
  | 9~33 -> b9_33
  | 10~27 -> b10_27
  | 10~3 -> b3_10
  | 10~45 -> b10_45
  | 11~37 -> b11_37
  | 11~1 -> b1_11
  | 11~46 -> b11_46
  | 12~3 -> b3_12
  | 12~9 -> b9_12
  | 12~23 -> b12_23
  | 13~0 -> b0_13
  | 14~42 -> b14_42
  | 15~30 -> b15_30
  | 15~33 -> b15_33
  | 16~34 -> b16_34
  | 16~20 -> b16_20
  | 16~7 -> b7_16
  | 17~21 -> b17_21
  | 17~44 -> b17_44
  | 17~0 -> b0_17
  | 17~32 -> b17_32
  | 17~45 -> b17_45
  | 18~1 -> b1_18
  | 18~48 -> b18_48
  | 18~47 -> b18_47
  | 18~43 -> b18_43
  | 19~23 -> b19_23
  | 19~20 -> b19_20
  | 20~19 -> b19_20
  | 20~16 -> b16_20
  | 21~41 -> b21_41
  | 21~22 -> b21_22
  | 21~45 -> b21_45
  | 21~5 -> b5_21
  | 21~0 -> b0_21
  | 21~4 -> b4_21
  | 21~32 -> b21_32
  | 21~37 -> b21_37
  | 21~17 -> b17_21
  | 22~21 -> b21_22
  | 23~42 -> b23_42
  | 23~12 -> b12_23
  | 23~19 -> b19_23
  | 23~7 -> b7_23
  | 24~8 -> b8_24
  | 24~37 -> b24_37
  | 25~46 -> b25_46
  | 26~43 -> b26_43
  | 27~7 -> b7_27
  | 27~10 -> b10_27
  | 27~40 -> b27_40
  | 28~46 -> b28_46
  | 29~45 -> b29_45
  | 30~33 -> b30_33
  | 30~1 -> b1_30
  | 30~15 -> b15_30
  | 30~36 -> b30_36
  | 30~45 -> b30_45
  | 31~0 -> b0_31
  | 32~17 -> b17_32
  | 32~21 -> b21_32
  | 33~15 -> b15_33
  | 33~46 -> b33_46
  | 33~9 -> b9_33
  | 33~6 -> b6_33
  | 33~30 -> b30_33
  | 34~16 -> b16_34
  | 35~8 -> b8_35
  | 36~30 -> b30_36
  | 37~24 -> b24_37
  | 37~1 -> b1_37
  | 37~0 -> b0_37
  | 37~21 -> b21_37
  | 37~11 -> b11_37
  | 38~1 -> b1_38
  | 39~1 -> b1_39
  | 40~27 -> b27_40
  | 41~43 -> b41_43
  | 41~21 -> b21_41
  | 42~14 -> b14_42
  | 42~23 -> b23_42
  | 43~41 -> b41_43
  | 43~45 -> b43_45
  | 43~26 -> b26_43
  | 43~18 -> b18_43
  | 44~17 -> b17_44
  | 45~9 -> b9_45
  | 45~2 -> b2_45
  | 45~10 -> b10_45
  | 45~17 -> b17_45
  | 45~43 -> b43_45
  | 45~3 -> b3_45
  | 45~21 -> b21_45
  | 45~29 -> b29_45
  | 45~30 -> b30_45
  | 46~11 -> b11_46
  | 46~28 -> b28_46
  | 46~8 -> b8_46
  | 46~25 -> b25_46
  | 46~33 -> b33_46
  | 47~18 -> b18_47
  | 48~18 -> b18_48

let mergeLinkFaults u (x : [M]attribute) (y : [M]attribute) =
  merge u x y

let transLinkFaults d e (x : [M]attribute) =
  if isFailed e then
    {connected=None; static=None; ospf=None; bgp=None; selected=None;}
  else trans d e x

let initLinkFaults d u = init d u 


let d = (200.1.31.0/24)

let linkFaults = solution(initLinkFaults d, transLinkFaults d, mergeLinkFaults)

let reachable u =
  match linkFaults[u].selected with | None -> false | _ -> true

                                                             assert(reachable 1n, 0.99p)
                                                             assert(reachable 2n, 0.99p)
                                                             assert(reachable 3n, 0.99p)
                                                             assert(reachable 4n, 0.99p)
                                                             assert(reachable 5n, 0.99p)
                                                             assert(reachable 6n, 0.99p)
                                                             assert(reachable 7n, 0.99p)
                                                             assert(reachable 8n, 0.99p)
                                                             assert(reachable 9n, 0.99p)
                                                             assert(reachable 10n, 0.99p)
                                                             assert(reachable 11n, 0.99p)
                                                             assert(reachable 12n, 0.99p)
                                                             assert(reachable 13n, 0.99p)
                                                             assert(reachable 14n, 0.99p)
                                                             assert(reachable 15n, 0.99p)
                                                             assert(reachable 16n, 0.99p)
                                                             assert(reachable 17n, 0.99p)
                                                             assert(reachable 18n, 0.99p)
                                                             assert(reachable 19n, 0.99p)
                                                             assert(reachable 20n, 0.99p)
                                                             assert(reachable 21n, 0.99p)
                                                             assert(reachable 22n, 0.99p)
                                                             assert(reachable 23n, 0.99p)
                                                             assert(reachable 24n, 0.99p)
                                                             assert(reachable 25n, 0.99p)
                                                             assert(reachable 26n, 0.99p)
                                                             assert(reachable 27n, 0.99p)
                                                             assert(reachable 28n, 0.99p)
                                                             assert(reachable 29n, 0.99p)
                                                             assert(reachable 30n, 0.99p)
                                                             assert(reachable 31n, 0.99p)
                                                             assert(reachable 32n, 0.99p)
                                                             assert(reachable 33n, 0.99p)
                                                             assert(reachable 34n, 0.99p)
                                                             assert(reachable 35n, 0.99p)
                                                             assert(reachable 36n, 0.99p)
                                                             assert(reachable 37n, 0.99p)
                                                             assert(reachable 38n, 0.99p)
                                                             assert(reachable 39n, 0.99p)
                                                             assert(reachable 40n, 0.99p)
                                                             assert(reachable 41n, 0.99p)
                                                             assert(reachable 42n, 0.99p)
                                                             assert(reachable 43n, 0.99p)
                                                             assert(reachable 44n, 0.99p)
                                                             assert(reachable 45n, 0.99p)
                                                             assert(reachable 46n, 0.99p)
                                                             assert(reachable 47n, 0.99p)
                                                             assert(reachable 48n, 0.99p)
